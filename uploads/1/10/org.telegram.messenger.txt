*************************************************************************
**   AndroBugs Framework - Android App Security Vulnerability Scanner  **
**                            version: 1.0.0                           **
**     author: Yu-Cheng Lin (@AndroBugs, http://www.AndroBugs.com)     **
**               contact: androbugs.framework@gmail.com                **
*************************************************************************
Platform: Android
Package Name: org.telegram.messenger
Package Version Name: 4.9.1
Package Version Code: 13613
Min Sdk: 23
Target Sdk: 27
MD5   : 1d106d04c5ca07f38dd4c9a8e53a0109
SHA1  : 62fd8890a6146b37c7be49feb84189be94a96671
SHA256: ae537f162a3b34e33cbc841363a659ff92ee00e4e836fbe34010cf799761c0be
SHA512: 2528acc668049b3369b2f213d3b36f022200f174acdd6958e2b5c245c83821f355bbf68f1bc4e2f6510235b408572150fb9505c9edb0c9e64d84c3d8dd2d4ecc
Analyze Signature: b2f32854fe5e5303ec2b7bcfea6357b0e84737b5597c1606044dfc142eb67404b4d0d69aab4decda8ca779b0d51f27158ada8cf0e7ae5f95591790edf6dbe4b3
------------------------------------------------------------------------------------------------
[Critical] <Implicit_Intent> Implicit Service Checking:
           To ensure your app is secure, always use an explicit intent when starting a Service and DO NOT declare intent filters for your
           services. Using an implicit intent to start a service is a security hazard because you cannot be certain what service will
           respond to the intent, and the user cannot see which service starts.
           Reference: http://developer.android.com/guide/components/intents-filters.html#Types
               => org.telegram.messenger.GcmPushListenerService
               => org.telegram.messenger.GcmInstanceIDListenerService
               => org.telegram.messenger.AuthenticatorService
               => org.telegram.messenger.MusicBrowserService
               => org.telegram.messenger.WearDataLayerListenerService
               => com.google.firebase.messaging.FirebaseMessagingService
               => com.google.firebase.iid.FirebaseInstanceIdService
[Critical] <SSL_Security> SSL Connection Checking:
           URLs that are NOT under SSL (Total:6):
               http://maps.google.com/maps?saddr=%f,%f&daddr=%f,%f
                   => Lorg/telegram/ui/LocationActivity$14;->onClick(Landroid/view/View;)V
               http://schemas.microsoft.com/DRM/2007/03/protocols/AcquireLicense
                   => Lcom/google/android/exoplayer2/drm/HttpMediaDrmCallback;->executeKeyRequest(Ljava/util/UUID;
                    Lcom/google/android/exoplayer2/drm/ExoMediaDrm$KeyRequest; Ljava/lang/String;)[B
               http://www.aparat.com/video/video/embed/vt/frame/showvideo/yes/videohash/%s
                   => Lorg/telegram/ui/Components/WebPlayerView$AparatVideoTask;->doInBackground([Ljava/lang/Void;)Ljava/lang/String;
               http://www.google.com
                   => Lorg/telegram/messenger/browser/Browser;->openUrl(Landroid/content/Context; Landroid/net/Uri; Z Z)V
               http://www.smpte-ra.org/schemas/2052-1/2010/smpte-tt
                   => Lcom/googlecode/mp4parser/authoring/tracks/SMPTETTTrackImpl;-><init>([Ljava/io/File;)V
                   => Lcom/googlecode/mp4parser/authoring/tracks/SMPTETTTrackImpl$TextTrackNamespaceContext;->getNamespaceURI(Ljava/lang/Str
                    ing;)Ljava/lang/String;
                   => Lcom/googlecode/mp4parser/authoring/tracks/SMPTETTTrackImpl$TextTrackNamespaceContext;->getPrefix(Ljava/lang/String;)L
                    java/lang/String;
               http://youtube.com
                   => Lorg/telegram/ui/ArticleViewer$BlockEmbedCell$1;->onInitFailed()V
                   => Lorg/telegram/ui/Components/EmbedBottomSheet$15;->onOpenAnimationEnd()V
                   => Lorg/telegram/ui/Components/EmbedBottomSheet$10;->onInitFailed()V
                   => Lorg/telegram/ui/ArticleViewer$BlockEmbedCell;->setBlock(Lorg/telegram/tgnet/TLRPC$TL_pageBlockEmbed;)V
[Critical] <WebView><Remote Code Execution><#CVE-2013-4710#> WebView RCE Vulnerability Checking:
           Found a critical WebView "addJavascriptInterface" vulnerability. This method can be used to allow JavaScript to control the host
           application.
           This is a powerful feature, but also presents a security risk for applications targeted to API level JELLY_BEAN(4.2) or below,
           because JavaScript could use reflection to access an injected object's public fields. Use of this method in a WebView containing
           untrusted content could allow an attacker to manipulate the host application in unintended ways, executing Java code with the
           permissions of the host application.
           Reference:
             1."http://developer.android.com/reference/android/webkit/WebView.html#addJavascriptInterface(java.lang.Object,
           java.lang.String) "
             2.https://labs.mwrinfosecurity.com/blog/2013/09/24/webview-addjavascriptinterface-remote-code-execution/
             3.http://50.56.33.56/blog/?p=314
             4.http://blog.trustlook.com/2013/09/04/alert-android-webview-addjavascriptinterface-code-execution-vulnerability/
           Please modify the below code:
               => Lorg/telegram/ui/Components/EmbedBottomSheet$15;->onOpenAnimationEnd()V (0x202) --->
                    Landroid/webkit/WebView;->addJavascriptInterface(Ljava/lang/Object; Ljava/lang/String;)V
               => Lorg/telegram/ui/Components/WebPlayerView;-><init>(Landroid/content/Context; Z Z
                    Lorg/telegram/ui/Components/WebPlayerView$WebPlayerViewDelegate;)V (0xd6) --->
                    Landroid/webkit/WebView;->addJavascriptInterface(Ljava/lang/Object; Ljava/lang/String;)V
               => Lorg/telegram/ui/PaymentFormActivity;->createView(Landroid/content/Context;)Landroid/view/View; (0x1bc6) --->
                    Landroid/webkit/WebView;->addJavascriptInterface(Ljava/lang/Object; Ljava/lang/String;)V
               => Lorg/telegram/ui/WebviewActivity;->createView(Landroid/content/Context;)Landroid/view/View; (0x19a) --->
                    Landroid/webkit/WebView;->addJavascriptInterface(Ljava/lang/Object; Ljava/lang/String;)V
[Warning]  External Storage Accessing:
           External storage access found (Remember DO NOT write important files to external storages):
               => Lorg/telegram/messenger/AndroidUtilities;->getPath(Landroid/net/Uri;)Ljava/lang/String; (0x6c) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lorg/telegram/messenger/ImageLoader;->createMediaPaths()Landroid/util/SparseArray; (0x96) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lorg/telegram/messenger/SharedConfig;->checkSaveToGalleryFiles()V (0x4) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lorg/telegram/ui/DocumentSelectActivity;->listFiles(Ljava/io/File;)Z (0x14) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lorg/telegram/ui/DocumentSelectActivity;->listRoots()V (0x2c) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lorg/telegram/ui/DocumentSelectActivity;->listRoots()V (0xd8) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lorg/telegram/ui/DocumentSelectActivity;->listRoots()V (0x41a) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
[Warning]  AndroidManifest Exported Components Checking:
           Found "exported" components(except for Launcher) for receiving outside applications' actions (AndroidManifest.xml).
           These components can be initilized by other apps. You should add or modify the attribute to [exported="false"] if you don't want
           to.
           You can also protect it with a customized permission with "signature" or higher protectionLevel and specify in
           "android:permission" attribute.
                 activity => org.telegram.ui.ExternalActionActivity
                 activity => org.telegram.messenger.GoogleVoiceClientActivity
                  service => org.telegram.messenger.GcmPushListenerService
                  service => org.telegram.messenger.GcmInstanceIDListenerService
                  service => org.telegram.messenger.WearDataLayerListenerService
                  service => com.google.firebase.messaging.FirebaseMessagingService
                  service => com.google.firebase.iid.FirebaseInstanceIdService
                 receiver => org.telegram.messenger.MusicPlayerReceiver
                 receiver => org.telegram.messenger.AppStartReceiver
[Warning] <Sensitive_Information> Getting IMEI and Device ID:
           This app has code getting the "device id(IMEI)" but there are problems with this "TelephonyManager.getDeviceId()" approach.
           1.Non-phones: Wifi-only devices or music players that don't have telephony hardware just don't have this kind of unique
           identifier.
           2.Persistence: On devices which do have this, it persists across device data wipes and factory resets. It's not clear at all if,
           in this situation, your app should regard this as the same device.
           3.Privilege:It requires READ_PHONE_STATE permission, which is irritating if you don't otherwise use or need telephony.
           4.Bugs: We have seen a few instances of production phones for which the implementation is buggy and returns garbage, for example
           zeros or asterisks.
           If you want to get an unique id for the device, we suggest you use "Installation" framework in the following article.
           Please check the reference: http://android-developers.blogspot.tw/2011/03/identifying-app-installations.html
               => Lorg/telegram/messenger/EmuDetector;->checkDeviceId()Z (0x18) --->
                    Landroid/telephony/TelephonyManager;->getDeviceId()Ljava/lang/String;
[Warning] <Sensitive_Information> Getting ANDROID_ID:
           This app has code getting the 64-bit number "Settings.Secure.ANDROID_ID".
           ANDROID_ID seems a good choice for a unique device identifier. There are downsides: First, it is not 100% reliable on releases of
           Android prior to 2.2 (Froyo).
           Also, there has been at least one widely-observed bug in a popular handset from a major manufacturer, where every instance has
           the same ANDROID_ID.
           If you want to get an unique id for the device, we suggest you use "Installation" framework in the following article.
           Please check the reference: http://android-developers.blogspot.tw/2011/03/identifying-app-installations.html
               => Lcom/google/android/gms/measurement/internal/zzfa;->zzd(Lcom/google/android/gms/measurement/internal/zzad;
                    Lcom/google/android/gms/measurement/internal/zzh;)V (0xbf0) --->
                    Landroid/provider/Settings$Secure;->getString(Landroid/content/ContentResolver; Ljava/lang/String;)Ljava/lang/String;
[Warning] <WebView> WebView Local File Access Attacks Checking:
           Found "setAllowFileAccess(true)" or not set(enabled by default) in WebView. The attackers could inject malicious script into
           WebView and exploit the opportunity to access local resources. This can be mitigated or prevented by disabling local file system
           access. (It is enabled by default)
           Note that this enables or disables file system access only. Assets and resources are still accessible using file:///android_asset
           and file:///android_res.
           The attackers can use "mWebView.loadUrl("file:///data/data/[Your_Package_Name]/[File]");" to access app's local file.
           Reference: (1)https://labs.mwrinfosecurity.com/blog/2012/04/23/adventures-with-android-webviews/
                      (2)http://developer.android.com/reference/android/webkit/WebSettings.html#setAllowFileAccess(boolean)
           Please add or modify "yourWebView.getSettings().setAllowFileAccess(false)" to your WebView:
               Lorg/telegram/ui/ArticleViewer$BlockEmbedCell;-><init>(Lorg/telegram/ui/ArticleViewer; Landroid/content/Context;)V
               Lorg/telegram/ui/Components/EmbedBottomSheet;-><init>(Landroid/content/Context; Ljava/lang/String; Ljava/lang/String;
                    Ljava/lang/String; Ljava/lang/String; I I)V
               Lorg/telegram/ui/Components/WebPlayerView;-><init>(Landroid/content/Context; Z Z
                    Lorg/telegram/ui/Components/WebPlayerView$WebPlayerViewDelegate;)V
               Lorg/telegram/ui/PaymentFormActivity;->createView(Landroid/content/Context;)Landroid/view/View;
               Lorg/telegram/ui/WebviewActivity;->createView(Landroid/content/Context;)Landroid/view/View;
[Warning] <WebView> WebView Potential XSS Attacks Checking:
           Found "setJavaScriptEnabled(true)" in WebView, which could exposed to potential XSS attacks. Please check the web page code
           carefully and sanitize the output:
               => Lorg/telegram/ui/ArticleViewer$BlockEmbedCell;-><init>(Lorg/telegram/ui/ArticleViewer; Landroid/content/Context;)V (0x5e)
                    ---> Landroid/webkit/WebSettings;->setJavaScriptEnabled(Z)V
               => Lorg/telegram/ui/Components/EmbedBottomSheet;-><init>(Landroid/content/Context; Ljava/lang/String; Ljava/lang/String;
                    Ljava/lang/String; Ljava/lang/String; I I)V (0x24e) ---> Landroid/webkit/WebSettings;->setJavaScriptEnabled(Z)V
               => Lorg/telegram/ui/Components/WebPlayerView;-><init>(Landroid/content/Context; Z Z
                    Lorg/telegram/ui/Components/WebPlayerView$WebPlayerViewDelegate;)V (0xea) --->
                    Landroid/webkit/WebSettings;->setJavaScriptEnabled(Z)V
               => Lorg/telegram/ui/PaymentFormActivity;->createView(Landroid/content/Context;)Landroid/view/View; (0x1b3e) --->
                    Landroid/webkit/WebSettings;->setJavaScriptEnabled(Z)V
               => Lorg/telegram/ui/PaymentFormActivity;->createView(Landroid/content/Context;)Landroid/view/View; (0x3a14) --->
                    Landroid/webkit/WebSettings;->setJavaScriptEnabled(Z)V
               => Lorg/telegram/ui/WebviewActivity;->createView(Landroid/content/Context;)Landroid/view/View; (0x126) --->
                    Landroid/webkit/WebSettings;->setJavaScriptEnabled(Z)V
[Notice] <Command> Executing "root" or System Privilege Checking:
           The app may has the code checking for "root" permission, mounting filesystem operations or monitoring system:
               Lcom/googlecode/mp4parser/util/Iso639;-><clinit>()V  => 'su'
               Lorg/telegram/messenger/EmuDetector;->checkIp()Z  => '/system/bin/'
               Lorg/telegram/messenger/EmuDetector;->checkIp()Z  => '/system/bin/netcfg'
[Notice] <Database><#CVE-2011-3901#> Android SQLite Databases Vulnerability Checking:
           This app is using Android SQLite databases but it's "NOT" suffering from SQLite Journal Information Disclosure Vulnerability.
[Notice]  File Unsafe Delete Checking:
           Everything you delete may be recovered by any user or attacker, especially rooted devices.
           Please make sure do not use "file.delete()" to delete essential files.
           Check this video: https://www.youtube.com/watch?v=tGw1fxUD-uY
               => Lcom/google/android/exoplayer2/upstream/cache/CacheDataSink;->closeCurrentOutputStream()V (0x5a) --->
                    Ljava/io/File;->delete()Z
               => Lcom/google/android/exoplayer2/upstream/cache/CacheDataSink;->closeCurrentOutputStream()V (0x8a) --->
                    Ljava/io/File;->delete()Z
               => Lcom/google/android/exoplayer2/upstream/cache/CachedContent;->removeSpan(Lcom/google/android/exoplayer2/upstream/cache/Cac
                    heSpan;)Z (0x14) ---> Ljava/io/File;->delete()Z
               => Lcom/google/android/exoplayer2/upstream/cache/SimpleCache;->initialize()V (0x92) ---> Ljava/io/File;->delete()Z
               => Lcom/google/android/exoplayer2/upstream/cache/SimpleCache;->commitFile(Ljava/io/File;)V (0x7e) --->
                    Ljava/io/File;->delete()Z
               => Lcom/google/android/exoplayer2/util/AtomicFile;->restoreBackup()V (0x14) ---> Ljava/io/File;->delete()Z
               => Lcom/google/android/exoplayer2/util/AtomicFile;->delete()V (0x4) ---> Ljava/io/File;->delete()Z
               => Lcom/google/android/exoplayer2/util/AtomicFile;->delete()V (0xe) ---> Ljava/io/File;->delete()Z
               => Lcom/google/android/exoplayer2/util/AtomicFile;->endWrite(Ljava/io/OutputStream;)V (0xa) ---> Ljava/io/File;->delete()Z
               => Lcom/google/android/exoplayer2/util/AtomicFile;->startWrite()Ljava/io/OutputStream; (0x9a) ---> Ljava/io/File;->delete()Z
               => Lcom/google/android/exoplayer2/util/Util;->createTempDirectory(Landroid/content/Context; Ljava/lang/String;)Ljava/io/File;
                    (0x8) ---> Ljava/io/File;->delete()Z
               => Lcom/google/android/exoplayer2/util/Util;->recursiveDelete(Ljava/io/File;)V (0x24) ---> Ljava/io/File;->delete()Z
               => Lcom/google/android/gms/measurement/internal/zzam;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase; (0x4a)
                    ---> Ljava/io/File;->delete()Z
               => Lcom/google/android/gms/measurement/internal/zzt;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase; (0x88)
                    ---> Ljava/io/File;->delete()Z
               => Lcom/google/firebase/iid/zzx;->zza(Landroid/content/Context;)V (0x36) ---> Ljava/io/File;->delete()Z
               => Lnet/hockeyapp/android/tasks/SendFeedbackTask;->clearTemporaryFolder(Ljava/util/HashMap;)V (0x72) --->
                    Ljava/io/File;->delete()Z
               => Lnet/hockeyapp/android/tasks/SendFeedbackTask;->clearTemporaryFolder(Ljava/util/HashMap;)V (0xe6) --->
                    Ljava/io/File;->delete()Z
               => Lnet/hockeyapp/android/utils/SimpleMultipartEntity;->writeTo(Ljava/io/OutputStream;)V (0x54) --->
                    Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/Emoji;->loadEmoji(I I)V (0x80) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/Emoji;->loadEmoji(I I)V (0xe6) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/Emoji;->loadEmoji(I I)V (0x194) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/FileLoadOperation;->onFinishLoadingFile(Z)V (0x26) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/FileLoadOperation;->onFinishLoadingFile(Z)V (0x3c) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/FileLoadOperation;->processRequestResult(Lorg/telegram/messenger/FileLoadOperation$RequestInfo;
                    Lorg/telegram/tgnet/TLRPC$TL_error;)Z (0x5f2) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/FileLoadOperation;->start(Lorg/telegram/messenger/FileStreamLoadOperation; I)Z (0x3c6) --->
                    Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/FileLoadOperation;->start(Lorg/telegram/messenger/FileStreamLoadOperation; I)Z (0xfd0) --->
                    Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/FileLoader$10;->run()V (0x68) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/FileLoader$10;->run()V (0xbc) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/FileLoader$10;->run()V (0x11c) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/FileLoader$10;->run()V (0x156) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/FileLog;->cleanupLogs()V (0xe2) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/ImageLoader$CacheOutTask;->run()V (0x4c4) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/ImageLoader$CacheOutTask;->run()V (0xeae) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/ImageLoader;->canMoveFiles(Ljava/io/File; Ljava/io/File; I)Z (0x64) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/ImageLoader;->canMoveFiles(Ljava/io/File; Ljava/io/File; I)Z (0x6a) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/ImageLoader;->loadHttpFile(Ljava/lang/String; Ljava/lang/String; I)V (0x76) --->
                    Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/LocaleController;->deleteLanguage(Lorg/telegram/messenger/LocaleController$LocaleInfo; I)Z (0xaa)
                    ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/MediaController$17;->run()V (0x16c) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/MediaController$19$1;->run()V (0x230) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/MediaController$20;->run()V (0x92) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/MediaController$22;->run()V (0xb6) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/MediaController;->scheduleVideoConvert(Lorg/telegram/messenger/MessageObject; Z)Z (0x3c) --->
                    Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/MessagesStorage;->cleanupInternal()V (0x52) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/MessagesStorage;->cleanupInternal()V (0x68) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/MessagesStorage;->cleanupInternal()V (0x7e) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/NativeLoader;->initNativeLibs(Landroid/content/Context;)V (0xfe) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/NativeLoader;->loadFromZip(Landroid/content/Context; Ljava/io/File; Ljava/io/File;
                    Ljava/lang/String;)Z (0x14) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/SharedConfig;->checkSaveToGalleryFiles()V (0x68) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/SharedConfig;->checkSaveToGalleryFiles()V (0x8a) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/UserConfig;->saveConfig(Z Ljava/io/File;)V (0x3a0) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/messenger/voip/VoIPController;->getLogFilePath(J)Ljava/lang/String; (0x9c) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/ui/ActionBar/Theme;->deleteTheme(Lorg/telegram/ui/ActionBar/Theme$ThemeInfo;)Z (0x56) --->
                    Ljava/io/File;->delete()Z
               => Lorg/telegram/ui/Cells/AudioPlayerCell;->updateButtonState(Z)V (0xa0) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/ui/Cells/SharedAudioCell;->updateButtonState(Z)V (0xa0) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/ui/Components/ChatActivityEnterView;->lambda$new$4$ChatActivityEnterView(Landroid/view/View;)V (0x3e) --->
                    Ljava/io/File;->delete()Z
               => Lorg/telegram/ui/Components/ChatAttachAlert$10;->shutterCancel()V (0x1e) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/ui/Components/ChatAttachAlert$15;->cancelButtonPressed()Z (0xb4) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/ui/Components/ChatAttachAlert$15;->cancelButtonPressed()Z (0xd0) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/ui/Components/ChatAttachAlert$15;->cancelButtonPressed()Z (0xec) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/ui/Components/ChatAttachAlert;->clearSelectedPhotos()V (0xae) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/ui/Components/ChatAttachAlert;->clearSelectedPhotos()V (0xca) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/ui/Components/ChatAttachAlert;->clearSelectedPhotos()V (0xe6) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/ui/Components/InstantCameraView$VideoRecorder;->handleStopRecording(I)V (0x166) --->
                    Ljava/io/File;->delete()Z
               => Lorg/telegram/ui/Components/InstantCameraView;->cancel()V (0x86) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/ui/Components/Paint/Slice;->cleanResources()V (0xc) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/ui/Components/WallpaperUpdater;->cleanup()V (0x4) ---> Ljava/io/File;->delete()Z
               => Lorg/telegram/ui/PhonebookShareActivity;-><init>(Lorg/telegram/messenger/ContactsController$Contact; Landroid/net/Uri;
                    Ljava/io/File; Ljava/lang/String;)V (0xd0) ---> Ljava/io/File;->delete()Z
[Notice] <Debug><Hacker> Codes for Checking Android Debug Mode:
           Found codes for checking "ApplicationInfo.FLAG_DEBUGGABLE" in AndroidManifest.xml:
               => Lcom/google/android/gms/common/GoogleSignatureVerifier;->zza
                    (Landroid/content/pm/PackageInfo;)Lcom/google/android/gms/common/zzg;
[Notice] <Hacker> APK Installing Source Checking:
           This app has code checking APK installer sources(e.g. from Google Play, from Amazon, etc.). It might be used to check for whether
           the app is hacked by the attackers.
               => Lcom/google/android/gms/measurement/internal/zzaj;->zzgu()V (0x25a) --->
                    Landroid/content/pm/PackageManager;->getInstallerPackageName(Ljava/lang/String;)Ljava/lang/String;
               => Lcom/google/android/gms/measurement/internal/zzfa;->zza(Landroid/content/Context; Ljava/lang/String; Ljava/lang/String; Z
                    Z Z J Ljava/lang/String;)Lcom/google/android/gms/measurement/internal/zzh; (0x4e) --->
                    Landroid/content/pm/PackageManager;->getInstallerPackageName(Ljava/lang/String;)Ljava/lang/String;
               => Lnet/hockeyapp/android/UpdateManager;->installedFromMarket(Ljava/lang/ref/WeakReference;)Z (0x22) --->
                    Landroid/content/pm/PackageManager;->getInstallerPackageName(Ljava/lang/String;)Ljava/lang/String;
               => Lorg/telegram/ui/LaunchActivity;->checkAppUpdate(Z)V (0x6e) --->
                    Landroid/content/pm/PackageManager;->getInstallerPackageName(Ljava/lang/String;)Ljava/lang/String;
[Notice] <Hacker> Code Setting Preventing Screenshot Capturing:
           This app has code setting the preventing screenshot capturing.
           Example: getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);
           It is used by the developers to protect the app:
               => Lorg/telegram/messenger/MediaController;->setFlagSecure(Lorg/telegram/ui/ActionBar/BaseFragment; Z)V (0x1c) --->
                    Landroid/view/Window;->setFlags(I I)V
               => Lorg/telegram/ui/ExternalActionActivity;->onCreate(Landroid/os/Bundle;)V (0x5e) ---> Landroid/view/Window;->setFlags(I I)V
               => Lorg/telegram/ui/PaymentFormActivity;->onResume()V (0x60) ---> Landroid/view/Window;->setFlags(I I)V
[Notice] <Signature><Hacker> Getting Signature Code Checking:
           This app has code checking the package signature in the code. It might be used to check for whether the app is hacked by the
           attackers.
               => Lcom/google/android/gms/common/GooglePlayServicesUtilLight;->zza(Landroid/content/Context; Z I)I (0x3e) --->
                    Landroid/content/pm/PackageManager;->getPackageInfo(Ljava/lang/String; I)Landroid/content/pm/PackageInfo;
               => Lcom/google/android/gms/common/util/UidVerifier;->isGooglePlayServicesUid(Landroid/content/Context; I)Z (0x28) --->
                    Landroid/content/pm/PackageManager;->getPackageInfo(Ljava/lang/String; I)Landroid/content/pm/PackageInfo;
[Notice]  Native Library Loading Checking:
           Native library loading codes(System.loadLibrary(...)) found:
               [libtmessages.29.so]
               => Lorg/telegram/messenger/NativeLoader;->initNativeLibs(Landroid/content/Context;)V (0x1e) --->
                    Ljava/lang/System;->loadLibrary(Ljava/lang/String;)V
               [libtmessages.29.so]
               => Lorg/telegram/messenger/NativeLoader;->initNativeLibs(Landroid/content/Context;)V (0x14c) --->
                    Ljava/lang/System;->loadLibrary(Ljava/lang/String;)V
[Notice]  Native Methods Checking:
           Native methods found:
               Class: Lcom/google/android/exoplayer2/ext/ffmpeg/FfmpegDecoder;
                  ->Methods:
                       ffmpegDecode(J Ljava/nio/ByteBuffer; I Ljava/nio/ByteBuffer; I)I
                       ffmpegGetChannelCount(J)I
                       ffmpegGetSampleRate(J)I
                       ffmpegInitialize(Ljava/lang/String; [B Z I I)J
                       ffmpegRelease(J)V
                       ffmpegReset(J [B)J
               Class: Lcom/google/android/exoplayer2/ext/ffmpeg/FfmpegLibrary;
                  ->Methods:
                       ffmpegGetVersion()Ljava/lang/String;
                       ffmpegHasDecoder(Ljava/lang/String;)Z
               Class: Lcom/google/android/exoplayer2/ext/flac/FlacDecoderJni;
                  ->Methods:
                       flacDecodeMetadata(J)Lcom/google/android/exoplayer2/util/FlacStreamInfo;
                       flacDecodeToArray(J [B)I
                       flacDecodeToBuffer(J Ljava/nio/ByteBuffer;)I
                       flacFlush(J)V
                       flacGetDecodePosition(J)J
                       flacGetLastFrameFirstSampleIndex(J)J
                       flacGetLastFrameTimestamp(J)J
                       flacGetNextFrameFirstSampleIndex(J)J
                       flacGetSeekPosition(J J)J
                       flacGetStateString(J)Ljava/lang/String;
                       flacInit()J
                       flacIsDecoderAtEndOfStream(J)Z
                       flacRelease(J)V
                       flacReset(J J)V
               Class: Lcom/google/android/exoplayer2/ext/opus/OpusDecoder;
                  ->Methods:
                       opusClose(J)V
                       opusDecode(J J Ljava/nio/ByteBuffer; I Lcom/google/android/exoplayer2/decoder/SimpleOutputBuffer;)I
                       opusGetErrorCode(J)I
                       opusGetErrorMessage(J)Ljava/lang/String;
                       opusInit(I I I I I [B)J
                       opusReset(J)V
                       opusSecureDecode(J J Ljava/nio/ByteBuffer; I Lcom/google/android/exoplayer2/decoder/SimpleOutputBuffer; I
                    Lcom/google/android/exoplayer2/drm/ExoMediaCrypto; I [B [B I [I [I)I
               Class: Lcom/google/android/exoplayer2/ext/opus/OpusLibrary;
                  ->Methods:
                       opusGetVersion()Ljava/lang/String;
               Class: Lorg/telegram/SQLite/SQLiteCursor;
                  ->Methods:
                       columnByteArrayValue(J I)[B
                       columnByteBufferValue(J I)J
                       columnDoubleValue(J I)D
                       columnIntValue(J I)I
                       columnIsNull(J I)I
                       columnLongValue(J I)J
                       columnStringValue(J I)Ljava/lang/String;
                       columnType(J I)I
               Class: Lorg/telegram/SQLite/SQLiteDatabase;
                  ->Methods:
                       beginTransaction(J)V
                       closedb(J)V
                       commitTransaction(J)V
                       opendb(Ljava/lang/String; Ljava/lang/String;)J
               Class: Lorg/telegram/SQLite/SQLitePreparedStatement;
                  ->Methods:
                       bindByteBuffer(J I Ljava/nio/ByteBuffer; I)V
                       bindDouble(J I D)V
                       bindInt(J I I)V
                       bindLong(J I J)V
                       bindNull(J I)V
                       bindString(J I Ljava/lang/String;)V
                       finalize(J)V
                       prepare(J Ljava/lang/String;)J
                       reset(J)V
                       step(J)I
               Class: Lorg/telegram/messenger/Emoji;
                  ->Methods:
                       getSuggestion(Ljava/lang/String;)[Ljava/lang/Object;
               Class: Lorg/telegram/messenger/Intro;
                  ->Methods:
                       onDrawFrame()V
                       onSurfaceChanged(I I F I)V
                       onSurfaceCreated()V
                       setDate(F)V
                       setFastTextures(I I I I)V
                       setFreeTextures(I I)V
                       setIcTextures(I I I I I I I I I)V
                       setPage(I)V
                       setPowerfulTextures(I I I I)V
                       setPrivateTextures(I I)V
                       setScrollOffset(F)V
                       setTelegramTextures(I I)V
               Class: Lorg/telegram/messenger/MediaController;
                  ->Methods:
                       isOpusFile(Ljava/lang/String;)I
                       startRecord(Ljava/lang/String;)I
                       stopRecord()V
                       writeFrame(Ljava/nio/ByteBuffer; I)I
                       getWaveform(Ljava/lang/String;)[B
                       getWaveform2([S I)[B
               Class: Lorg/telegram/messenger/MrzRecognizer;
                  ->Methods:
                       binarizeAndFindCharacters(Landroid/graphics/Bitmap; Landroid/graphics/Bitmap;)[[Landroid/graphics/Rect;
                       findCornerPoints(Landroid/graphics/Bitmap;)[I
                       performRecognition(Landroid/graphics/Bitmap; I I Landroid/content/res/AssetManager;)Ljava/lang/String;
                       setYuvBitmapPixels(Landroid/graphics/Bitmap; [B)V
               Class: Lorg/telegram/messenger/NativeLoader; (Loaded NDK files: ['libtmessages.29.so', 'libtmessages.29.so'])
                  ->Methods:
                       init(Ljava/lang/String; Z)V
               Class: Lorg/telegram/messenger/Utilities;
                  ->Methods:
                       aesCbcEncryption(Ljava/nio/ByteBuffer; [B [B I I I)V
                       aesCbcEncryptionByteArray([B [B [B I I I I)V
                       aesCtrDecryption(Ljava/nio/ByteBuffer; [B [B I I)V
                       aesCtrDecryptionByteArray([B [B [B I I I)V
                       aesIgeEncryption(Ljava/nio/ByteBuffer; [B [B Z I I)V
                       argon2(I)I
                       blurBitmap(Ljava/lang/Object; I I I I I)V
                       calcCDT(Ljava/nio/ByteBuffer; I I Ljava/nio/ByteBuffer;)V
                       clearDir(Ljava/lang/String; I J)V
                       convertVideoFrame(Ljava/nio/ByteBuffer; Ljava/nio/ByteBuffer; I I I I I)I
                       getDirSize(Ljava/lang/String; I)J
                       loadWebpImage(Landroid/graphics/Bitmap; Ljava/nio/ByteBuffer; I Landroid/graphics/BitmapFactory$Options; Z)Z
                       pbkdf2([B [B [B I)I
                       pinBitmap(Landroid/graphics/Bitmap;)I
                       readlink(Ljava/lang/String;)Ljava/lang/String;
                       unpinBitmap(Landroid/graphics/Bitmap;)V
               Class: Lorg/telegram/messenger/voip/AudioRecordJNI;
                  ->Methods:
                       nativeCallback(Ljava/nio/ByteBuffer;)V
               Class: Lorg/telegram/messenger/voip/AudioTrackJNI;
                  ->Methods:
                       nativeCallback([B)V
               Class: Lorg/telegram/messenger/voip/Resampler;
                  ->Methods:
                       convert44to48(Ljava/nio/ByteBuffer; Ljava/nio/ByteBuffer;)I
                       convert48to44(Ljava/nio/ByteBuffer; Ljava/nio/ByteBuffer;)I
               Class: Lorg/telegram/messenger/voip/VoIPController;
                  ->Methods:
                       nativeConnect(J)V
                       nativeDebugCtl(J I I)V
                       nativeGetDebugLog(J)Ljava/lang/String;
                       nativeGetDebugString(J)Ljava/lang/String;
                       nativeGetLastError(J)I
                       nativeGetPeerCapabilities(J)I
                       nativeGetPreferredRelayID(J)J
                       nativeGetStats(J Lorg/telegram/messenger/voip/VoIPController$Stats;)V
                       nativeGetVersion()Ljava/lang/String;
                       nativeInit()J
                       nativeRelease(J)V
                       nativeRequestCallUpgrade(J)V
                       nativeSendGroupCallKey(J [B)V
                       nativeSetAudioOutputGainControlEnabled(J Z)V
                       nativeSetConfig(J D D I Z Z Z Ljava/lang/String; Ljava/lang/String;)V
                       nativeSetEchoCancellationStrength(J I)V
                       nativeSetEncryptionKey(J [B Z)V
                       nativeSetMicMute(J Z)V
                       nativeSetNativeBufferSize(I)V
                       nativeSetNetworkType(J I)V
                       nativeSetProxy(J Ljava/lang/String; I Ljava/lang/String; Ljava/lang/String;)V
                       nativeSetRemoteEndpoints(J [Lorg/telegram/tgnet/TLRPC$TL_phoneConnection; Z Z I)V
                       nativeStart(J)V
               Class: Lorg/telegram/messenger/voip/VoIPServerConfig;
                  ->Methods:
                       nativeSetConfig([Ljava/lang/String; [Ljava/lang/String;)V
               Class: Lorg/telegram/tgnet/ConnectionsManager;
                  ->Methods:
                       native_applyDatacenterAddress(I I Ljava/lang/String; I)V
                       native_applyDnsConfig(I J Ljava/lang/String;)V
                       native_bindRequestToGuid(I I I)V
                       native_cancelRequest(I I Z)V
                       native_cancelRequestsForGuid(I I)V
                       native_checkProxy(I Ljava/lang/String; I Ljava/lang/String; Ljava/lang/String; Ljava/lang/String;
                    Lorg/telegram/tgnet/RequestTimeDelegate;)J
                       native_cleanUp(I Z)V
                       native_getConnectionState(I)I
                       native_getCurrentTime(I)I
                       native_getCurrentTimeMillis(I)J
                       native_getTimeDifference(I)I
                       native_init(I I I I Ljava/lang/String; Ljava/lang/String; Ljava/lang/String; Ljava/lang/String; Ljava/lang/String;
                    Ljava/lang/String; Ljava/lang/String; I Z Z I)V
                       native_isTestBackend(I)I
                       native_pauseNetwork(I)V
                       native_resumeNetwork(I Z)V
                       native_sendRequest(I J Lorg/telegram/tgnet/RequestDelegateInternal; Lorg/telegram/tgnet/QuickAckDelegate;
                    Lorg/telegram/tgnet/WriteToSocketDelegate; I I I Z I)V
                       native_setJava(Z)V
                       native_setLangCode(I Ljava/lang/String;)V
                       native_setNetworkAvailable(I Z I Z)V
                       native_setProxySettings(I Ljava/lang/String; I Ljava/lang/String; Ljava/lang/String; Ljava/lang/String;)V
                       native_setPushConnectionEnabled(I Z)V
                       native_setUseIpv6(I Z)V
                       native_setUserId(I I)V
                       native_switchBackend(I)V
                       native_updateDcSettings(I)V
               Class: Lorg/telegram/tgnet/FileLoadOperation;
                  ->Methods:
                       native_cancelLoadOperation(J)V
                       native_createLoadOpetation(I J J J I [B [B Ljava/lang/String; I I Ljava/lang/String; Ljava/lang/String;
                    Ljava/lang/Object;)J
                       native_startLoadOperation(J)V
               Class: Lorg/telegram/tgnet/NativeByteBuffer;
                  ->Methods:
                       native_getFreeBuffer(I)J
                       native_getJavaByteBuffer(J)Ljava/nio/ByteBuffer;
                       native_limit(J)I
                       native_position(J)I
                       native_reuse(J)V
               Class: Lorg/telegram/ui/Components/AnimatedFileDrawable;
                  ->Methods:
                       createDecoder(Ljava/lang/String; [I)J
                       destroyDecoder(J)V
                       getVideoFrame(J Landroid/graphics/Bitmap; [I)I
[Notice]  AndroidManifest Exported Components Checking 2:
           Found "exported" components(except for Launcher) for receiving Google's "Android" actions (AndroidManifest.xml):
                 activity => org.telegram.ui.ShareActivity
                 activity => org.telegram.messenger.OpenChatReceiver
                  service => org.telegram.messenger.AuthenticatorService
                  service => org.telegram.messenger.ContactsSyncAdapterService
                  service => org.telegram.messenger.MusicPlayerService
                  service => org.telegram.messenger.MusicBrowserService
                 receiver => org.telegram.messenger.CallReceiver
                 receiver => org.telegram.messenger.SmsListener
                 receiver => org.telegram.messenger.voip.VoIPMediaButtonReceiver
[Notice]  Security Classes Checking:
           Find some security-related class names:
               Lcom/coremedia/iso/boxes/fragment/TrackFragmentBaseMediaDecodeTimeBox;
               Lcom/google/android/exoplayer2/C$Encoding;
               Lcom/google/android/exoplayer2/C$PcmEncoding;
               Lcom/google/android/exoplayer2/RendererConfiguration;
               Lcom/google/android/exoplayer2/audio/AudioDecoderException;
               Lcom/google/android/exoplayer2/audio/AudioSink$ConfigurationException;
               Lcom/google/android/exoplayer2/audio/SimpleDecoderAudioRenderer$1;
               Lcom/google/android/exoplayer2/audio/SimpleDecoderAudioRenderer$AudioSinkListener;
               Lcom/google/android/exoplayer2/audio/SimpleDecoderAudioRenderer$ReinitializationState;
               Lcom/google/android/exoplayer2/audio/SimpleDecoderAudioRenderer;
               Lcom/google/android/exoplayer2/decoder/Buffer;
               Lcom/google/android/exoplayer2/decoder/CryptoInfo$1;
               Lcom/google/android/exoplayer2/decoder/CryptoInfo$PatternHolderV24;
               Lcom/google/android/exoplayer2/decoder/CryptoInfo;
               Lcom/google/android/exoplayer2/decoder/Decoder;
               Lcom/google/android/exoplayer2/decoder/DecoderCounters;
               Lcom/google/android/exoplayer2/decoder/DecoderInputBuffer$BufferReplacementMode;
               Lcom/google/android/exoplayer2/decoder/DecoderInputBuffer;
               Lcom/google/android/exoplayer2/decoder/OutputBuffer;
               Lcom/google/android/exoplayer2/decoder/SimpleDecoder$1;
               Lcom/google/android/exoplayer2/decoder/SimpleDecoder;
               Lcom/google/android/exoplayer2/decoder/SimpleOutputBuffer;
               Lcom/google/android/exoplayer2/drm/DecryptionException;
               Lcom/google/android/exoplayer2/ext/ffmpeg/FfmpegDecoder;
               Lcom/google/android/exoplayer2/ext/ffmpeg/FfmpegDecoderException;
               Lcom/google/android/exoplayer2/ext/flac/FlacDecoder;
               Lcom/google/android/exoplayer2/ext/flac/FlacDecoderException;
               Lcom/google/android/exoplayer2/ext/flac/FlacDecoderJni$FlacFrameDecodeException;
               Lcom/google/android/exoplayer2/ext/flac/FlacDecoderJni;
               Lcom/google/android/exoplayer2/ext/opus/OpusDecoder;
               Lcom/google/android/exoplayer2/ext/opus/OpusDecoderException;
               Lcom/google/android/exoplayer2/extractor/ConstantBitrateSeekMap;
               Lcom/google/android/exoplayer2/metadata/id3/Id3Decoder$FramePredicate;
               Lcom/google/android/exoplayer2/extractor/mp3/ConstantBitrateSeeker;
               Lcom/google/android/exoplayer2/extractor/mp4/TrackEncryptionBox;
               Lcom/google/android/exoplayer2/mediacodec/MediaCodecRenderer$DecoderInitializationException;
               Lcom/google/android/exoplayer2/mediacodec/MediaCodecRenderer$ReconfigurationState;
               Lcom/google/android/exoplayer2/mediacodec/MediaCodecUtil$DecoderQueryException;
               Lcom/google/android/exoplayer2/metadata/MetadataDecoder;
               Lcom/google/android/exoplayer2/metadata/MetadataDecoderFactory;
               Lcom/google/android/exoplayer2/metadata/MetadataDecoderFactory$1;
               Lcom/google/android/exoplayer2/metadata/emsg/EventMessageDecoder;
               Lcom/google/android/exoplayer2/metadata/emsg/EventMessageEncoder;
               Lcom/google/android/exoplayer2/metadata/id3/Id3Decoder$1;
               Lcom/google/android/exoplayer2/metadata/id3/Id3Decoder$Id3Header;
               Lcom/google/android/exoplayer2/metadata/id3/Id3Decoder;
               Lcom/google/android/exoplayer2/metadata/scte35/SpliceInfoDecoder;
               Lcom/google/android/exoplayer2/source/hls/Aes128DataSource;
               Lcom/google/android/exoplayer2/source/hls/HlsChunkSource$EncryptionKeyChunk;
               Lcom/google/android/exoplayer2/text/SubtitleDecoder;
               Lcom/google/android/exoplayer2/text/SimpleSubtitleDecoder;
               Lcom/google/android/exoplayer2/text/SubtitleDecoderException;
               Lcom/google/android/exoplayer2/text/SubtitleDecoderFactory;
               Lcom/google/android/exoplayer2/text/SubtitleDecoderFactory$1;
               Lcom/google/android/exoplayer2/text/cea/Cea608Decoder$CueBuilder$CueStyle;
               Lcom/google/android/exoplayer2/text/cea/Cea608Decoder$CueBuilder;
               Lcom/google/android/exoplayer2/text/cea/CeaDecoder;
               Lcom/google/android/exoplayer2/text/cea/Cea608Decoder;
               Lcom/google/android/exoplayer2/text/cea/Cea708Decoder$CueBuilder;
               Lcom/google/android/exoplayer2/text/cea/Cea708Decoder$DtvCcPacket;
               Lcom/google/android/exoplayer2/text/cea/Cea708Decoder;
               Lcom/google/android/exoplayer2/text/cea/CeaDecoder$1;
               Lcom/google/android/exoplayer2/text/cea/CeaDecoder$CeaInputBuffer;
               Lcom/google/android/exoplayer2/text/cea/CeaDecoder$CeaOutputBuffer;
               Lcom/google/android/exoplayer2/text/dvb/DvbDecoder;
               Lcom/google/android/exoplayer2/text/pgs/PgsDecoder$CueBuilder;
               Lcom/google/android/exoplayer2/text/pgs/PgsDecoder;
               Lcom/google/android/exoplayer2/text/ssa/SsaDecoder;
               Lcom/google/android/exoplayer2/text/subrip/SubripDecoder;
               Lcom/google/android/exoplayer2/text/ttml/TtmlDecoder$CellResolution;
               Lcom/google/android/exoplayer2/text/ttml/TtmlDecoder$FrameAndTickRate;
               Lcom/google/android/exoplayer2/text/ttml/TtmlDecoder;
               Lcom/google/android/exoplayer2/text/tx3g/Tx3gDecoder;
               Lcom/google/android/exoplayer2/text/webvtt/Mp4WebvttDecoder;
               Lcom/google/android/exoplayer2/text/webvtt/WebvttDecoder;
               Lcom/google/android/exoplayer2/trackselection/DefaultTrackSelector$AudioConfigurationTuple;
               Lcom/google/android/exoplayer2/upstream/crypto/AesCipherDataSink;
               Lcom/google/android/exoplayer2/upstream/crypto/AesCipherDataSource;
               Lcom/google/android/exoplayer2/upstream/crypto/AesFlushingCipher;
               Lcom/google/android/exoplayer2/video/AvcConfig;
               Lcom/google/android/exoplayer2/video/HevcConfig;
               Lcom/google/android/gms/common/api/GoogleApi$Settings$Builder;
               Lcom/google/android/gms/common/api/GoogleApi$Settings;
               Lcom/google/android/gms/common/internal/ClientSettings$Builder;
               Lcom/google/android/gms/common/internal/ClientSettings$OptionalApiSettings;
               Lcom/google/android/gms/common/internal/ClientSettings;
               Lcom/google/android/gms/common/internal/GmsClientSupervisor$ConnectionStatusConfig;
               Lcom/google/android/gms/internal/config/zza;
               Lcom/google/android/gms/internal/config/zzaa;
               Lcom/google/android/gms/internal/config/zzab;
               Lcom/google/android/gms/internal/config/zzac;
               Lcom/google/android/gms/internal/config/zzad;
               Lcom/google/android/gms/internal/config/zzae;
               Lcom/google/android/gms/internal/config/zzaf;
               Lcom/google/android/gms/internal/config/zzb;
               Lcom/google/android/gms/internal/config/zzag;
               Lcom/google/android/gms/internal/config/zzah;
               Lcom/google/android/gms/internal/config/zzai;
               Lcom/google/android/gms/internal/config/zzaj;
               Lcom/google/android/gms/internal/config/zzak;
               Lcom/google/android/gms/internal/config/zzal;
               Lcom/google/android/gms/internal/config/zzam;
               Lcom/google/android/gms/internal/config/zzan;
               Lcom/google/android/gms/internal/config/zzao;
               Lcom/google/android/gms/internal/config/zzaq;
               Lcom/google/android/gms/internal/config/zzar;
               Lcom/google/android/gms/internal/config/zzbh;
               Lcom/google/android/gms/internal/config/zzbb;
               Lcom/google/android/gms/internal/config/zzas;
               Lcom/google/android/gms/internal/config/zzat;
               Lcom/google/android/gms/internal/config/zzau;
               Lcom/google/android/gms/internal/config/zzav;
               Lcom/google/android/gms/internal/config/zzaw;
               Lcom/google/android/gms/internal/config/zzax;
               Lcom/google/android/gms/internal/config/zzay;
               Lcom/google/android/gms/internal/config/zzaz;
               Lcom/google/android/gms/internal/config/zzba;
               Lcom/google/android/gms/internal/config/zzbc;
               Lcom/google/android/gms/internal/config/zzbd;
               Lcom/google/android/gms/internal/config/zzbe;
               Lcom/google/android/gms/internal/config/zzbf;
               Lcom/google/android/gms/internal/config/zzbg;
               Lcom/google/android/gms/internal/config/zzbi;
               Lcom/google/android/gms/internal/config/zzbj;
               Lcom/google/android/gms/internal/config/zzbk;
               Lcom/google/android/gms/internal/config/zzc;
               Lcom/google/android/gms/internal/config/zzd;
               Lcom/google/android/gms/internal/config/zze;
               Lcom/google/android/gms/internal/config/zzf;
               Lcom/google/android/gms/internal/config/zzg;
               Lcom/google/android/gms/internal/config/zzh;
               Lcom/google/android/gms/internal/config/zzi;
               Lcom/google/android/gms/internal/config/zzj;
               Lcom/google/android/gms/internal/config/zzk;
               Lcom/google/android/gms/internal/config/zzl;
               Lcom/google/android/gms/internal/config/zzm;
               Lcom/google/android/gms/internal/config/zzn;
               Lcom/google/android/gms/internal/config/zzo;
               Lcom/google/android/gms/internal/config/zzr;
               Lcom/google/android/gms/internal/config/zzs;
               Lcom/google/android/gms/internal/config/zzp;
               Lcom/google/android/gms/internal/config/zzq;
               Lcom/google/android/gms/internal/config/zzt;
               Lcom/google/android/gms/internal/config/zzu;
               Lcom/google/android/gms/internal/config/zzv;
               Lcom/google/android/gms/internal/config/zzw;
               Lcom/google/android/gms/internal/config/zzx;
               Lcom/google/android/gms/internal/config/zzy;
               Lcom/google/android/gms/internal/config/zzz;
               Lcom/google/android/gms/maps/UiSettings;
               Lcom/google/android/gms/maps/internal/IUiSettingsDelegate;
               Lcom/google/android/gms/wearable/ConnectionConfiguration;
               Lcom/google/firebase/remoteconfig/FirebaseRemoteConfig;
               Lcom/google/firebase/remoteconfig/FirebaseRemoteConfigException;
               Lcom/google/firebase/remoteconfig/FirebaseRemoteConfigFetchException;
               Lcom/google/firebase/remoteconfig/FirebaseRemoteConfigFetchThrottledException;
               Lcom/google/firebase/remoteconfig/FirebaseRemoteConfigSettings$Builder;
               Lcom/google/firebase/remoteconfig/FirebaseRemoteConfigSettings;
               Lcom/google/firebase/remoteconfig/zza;
               Lcom/google/firebase/remoteconfig/zzb;
               Lcom/googlecode/mp4parser/authoring/tracks/CencEncryptedTrack;
               Lcom/googlecode/mp4parser/authoring/tracks/CencDecryptingTrackImpl;
               Lcom/googlecode/mp4parser/authoring/tracks/CencEncryptingTrackImpl$1;
               Lcom/googlecode/mp4parser/authoring/tracks/CencEncryptingTrackImpl;
               Lcom/googlecode/mp4parser/boxes/AbstractSampleEncryptionBox;
               Lcom/googlecode/mp4parser/boxes/AbstractTrackEncryptionBox;
               Lcom/googlecode/mp4parser/boxes/apple/AppleEncoderBox;
               Lcom/googlecode/mp4parser/boxes/apple/TrackEncodedPixelsDimensionsAtom;
               Lcom/googlecode/mp4parser/boxes/apple/TrackLoadSettingsAtom;
               Lcom/googlecode/mp4parser/boxes/cenc/CencDecryptingSampleList;
               Lcom/googlecode/mp4parser/boxes/cenc/CencEncryptingSampleList$1;
               Lcom/googlecode/mp4parser/boxes/cenc/CencEncryptingSampleList$EncryptedSampleImpl;
               Lcom/googlecode/mp4parser/boxes/cenc/CencEncryptingSampleList;
               Lcom/googlecode/mp4parser/boxes/dece/SampleEncryptionBox;
               Lcom/googlecode/mp4parser/boxes/mp4/objectdescriptors/AudioSpecificConfig$ELDSpecificConfig;
               Lcom/googlecode/mp4parser/boxes/mp4/objectdescriptors/AudioSpecificConfig$sbr_header;
               Lcom/googlecode/mp4parser/boxes/mp4/objectdescriptors/AudioSpecificConfig;
               Lcom/googlecode/mp4parser/boxes/mp4/objectdescriptors/DecoderConfigDescriptor;
               Lcom/googlecode/mp4parser/boxes/mp4/objectdescriptors/DecoderSpecificInfo;
               Lcom/googlecode/mp4parser/boxes/mp4/objectdescriptors/SLConfigDescriptor;
               Lcom/googlecode/mp4parser/boxes/mp4/samplegrouping/CencSampleEncryptionInformationGroupEntry;
               Lcom/googlecode/mp4parser/boxes/piff/PiffSampleEncryptionBox;
               Lcom/googlecode/mp4parser/boxes/piff/PiffTrackEncryptionBox;
               Lcom/mp4parser/iso14496/part15/AvcConfigurationBox;
               Lcom/mp4parser/iso14496/part15/AvcDecoderConfigurationRecord;
               Lcom/mp4parser/iso14496/part15/HevcConfigurationBox;
               Lcom/mp4parser/iso14496/part15/HevcDecoderConfigurationRecord$Array;
               Lcom/mp4parser/iso14496/part15/HevcDecoderConfigurationRecord;
               Lcom/mp4parser/iso23001/part7/TrackEncryptionBox;
               Lnet/hockeyapp/android/Constants$1;
               Lnet/hockeyapp/android/Constants$2;
               Lnet/hockeyapp/android/Constants;
               Lnet/hockeyapp/android/utils/Base64$Encoder;
               Lorg/telegram/messenger/BuildConfig;
               Lorg/telegram/messenger/SecretChatHelper$TL_decryptedMessageHolder;
               Lorg/telegram/messenger/SharedConfig$ProxyInfo;
               Lorg/telegram/messenger/SharedConfig;
               Lorg/telegram/messenger/UserConfig$1;
               Lorg/telegram/messenger/UserConfig;
               Lorg/telegram/messenger/VideoEncodingService;
               Lorg/telegram/messenger/audioinfo/mp3/ID3v2Encoding;
               Lorg/telegram/messenger/secretmedia/EncryptedFileDataSource$EncryptedFileDataSourceException;
               Lorg/telegram/messenger/secretmedia/EncryptedFileDataSource;
               Lorg/telegram/messenger/secretmedia/EncryptedFileInputStream;
               Lorg/telegram/messenger/voip/EncryptionKeyEmojifier;
               Lorg/telegram/messenger/voip/VoIPServerConfig;
               Lorg/telegram/tgnet/TLRPC$DecryptedMessage;
               Lorg/telegram/tgnet/TLRPC$DecryptedMessageAction;
               Lorg/telegram/tgnet/TLRPC$DecryptedMessageMedia;
               Lorg/telegram/tgnet/TLRPC$EncryptedChat;
               Lorg/telegram/tgnet/TLRPC$EncryptedFile;
               Lorg/telegram/tgnet/TLRPC$EncryptedMessage;
               Lorg/telegram/tgnet/TLRPC$InputEncryptedFile;
               Lorg/telegram/tgnet/TLRPC$PeerNotifySettings;
               Lorg/telegram/tgnet/TLRPC$TL_account_getNotifySettings;
               Lorg/telegram/tgnet/TLRPC$TL_account_getPasswordSettings;
               Lorg/telegram/tgnet/TLRPC$TL_account_passwordInputSettings;
               Lorg/telegram/tgnet/TLRPC$TL_account_passwordSettings;
               Lorg/telegram/tgnet/TLRPC$TL_account_resetNotifySettings;
               Lorg/telegram/tgnet/TLRPC$TL_account_updateNotifySettings;
               Lorg/telegram/tgnet/TLRPC$TL_account_updatePasswordSettings;
               Lorg/telegram/tgnet/TLRPC$TL_audioEncrypted;
               Lorg/telegram/tgnet/TLRPC$TL_config;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessage;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessageActionAbortKey;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessageActionAcceptKey;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessageActionCommitKey;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessageActionDeleteMessages;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessageActionFlushHistory;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessageActionNoop;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessageActionNotifyLayer;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessageActionReadMessages;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessageActionRequestKey;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessageActionResend;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessageActionScreenshotMessages;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessageActionSetMessageTTL;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessageActionTyping;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessageLayer;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessageMediaAudio;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessageMediaAudio_layer8;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessageMediaContact;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessageMediaDocument;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessageMediaDocument_layer8;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessageMediaEmpty;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessageMediaExternalDocument;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessageMediaGeoPoint;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessageMediaPhoto;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessageMediaPhoto_layer8;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessageMediaVenue;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessageMediaVideo;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessageMediaVideo_layer17;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessageMediaVideo_layer8;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessageMediaWebPage;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessageService;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessageService_layer8;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessage_layer17;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessage_layer45;
               Lorg/telegram/tgnet/TLRPC$TL_decryptedMessage_layer8;
               Lorg/telegram/tgnet/TLRPC$TL_documentEncrypted;
               Lorg/telegram/tgnet/TLRPC$TL_documentEncrypted_old;
               Lorg/telegram/tgnet/TLRPC$TL_encryptedChat;
               Lorg/telegram/tgnet/TLRPC$TL_encryptedChatDiscarded;
               Lorg/telegram/tgnet/TLRPC$TL_encryptedChatEmpty;
               Lorg/telegram/tgnet/TLRPC$TL_encryptedChatRequested;
               Lorg/telegram/tgnet/TLRPC$TL_encryptedChatRequested_old;
               Lorg/telegram/tgnet/TLRPC$TL_encryptedChatWaiting;
               Lorg/telegram/tgnet/TLRPC$TL_encryptedChat_old;
               Lorg/telegram/tgnet/TLRPC$TL_encryptedFile;
               Lorg/telegram/tgnet/TLRPC$TL_encryptedFileEmpty;
               Lorg/telegram/tgnet/TLRPC$TL_encryptedMessage;
               Lorg/telegram/tgnet/TLRPC$TL_encryptedMessageService;
               Lorg/telegram/tgnet/TLRPC$TL_fileEncryptedLocation;
               Lorg/telegram/tgnet/TLRPC$TL_help_getConfig;
               Lorg/telegram/tgnet/TLRPC$TL_help_getPassportConfig;
               Lorg/telegram/tgnet/TLRPC$help_PassportConfig;
               Lorg/telegram/tgnet/TLRPC$TL_help_passportConfig;
               Lorg/telegram/tgnet/TLRPC$TL_help_passportConfigNotModified;
               Lorg/telegram/tgnet/TLRPC$TL_inputEncryptedChat;
               Lorg/telegram/tgnet/TLRPC$TL_inputEncryptedFile;
               Lorg/telegram/tgnet/TLRPC$TL_inputEncryptedFileBigUploaded;
               Lorg/telegram/tgnet/TLRPC$TL_inputEncryptedFileEmpty;
               Lorg/telegram/tgnet/TLRPC$TL_inputEncryptedFileLocation;
               Lorg/telegram/tgnet/TLRPC$TL_inputEncryptedFileUploaded;
               Lorg/telegram/tgnet/TLRPC$TL_inputPeerNotifySettings;
               Lorg/telegram/tgnet/TLRPC$TL_messageEncryptedAction;
               Lorg/telegram/tgnet/TLRPC$TL_messages_acceptEncryption;
               Lorg/telegram/tgnet/TLRPC$messages_DhConfig;
               Lorg/telegram/tgnet/TLRPC$TL_messages_dhConfig;
               Lorg/telegram/tgnet/TLRPC$TL_messages_dhConfigNotModified;
               Lorg/telegram/tgnet/TLRPC$TL_messages_discardEncryption;
               Lorg/telegram/tgnet/TLRPC$TL_messages_getDhConfig;
               Lorg/telegram/tgnet/TLRPC$TL_messages_getPeerSettings;
               Lorg/telegram/tgnet/TLRPC$TL_messages_readEncryptedHistory;
               Lorg/telegram/tgnet/TLRPC$TL_messages_reportEncryptedSpam;
               Lorg/telegram/tgnet/TLRPC$TL_messages_requestEncryption;
               Lorg/telegram/tgnet/TLRPC$TL_messages_sendEncrypted;
               Lorg/telegram/tgnet/TLRPC$TL_messages_sendEncryptedFile;
               Lorg/telegram/tgnet/TLRPC$TL_messages_sendEncryptedMultiMedia;
               Lorg/telegram/tgnet/TLRPC$TL_messages_sendEncryptedService;
               Lorg/telegram/tgnet/TLRPC$messages_SentEncryptedMessage;
               Lorg/telegram/tgnet/TLRPC$TL_messages_sentEncryptedFile;
               Lorg/telegram/tgnet/TLRPC$TL_messages_sentEncryptedMessage;
               Lorg/telegram/tgnet/TLRPC$TL_messages_setEncryptedTyping;
               Lorg/telegram/tgnet/TLRPC$TL_messages_uploadEncryptedFile;
               Lorg/telegram/tgnet/TLRPC$TL_passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow;
               Lorg/telegram/tgnet/TLRPC$TL_peerNotifySettings;
               Lorg/telegram/tgnet/TLRPC$TL_peerNotifySettingsEmpty_layer77;
               Lorg/telegram/tgnet/TLRPC$TL_peerNotifySettings_layer47;
               Lorg/telegram/tgnet/TLRPC$TL_peerNotifySettings_layer77;
               Lorg/telegram/tgnet/TLRPC$TL_peerSettings;
               Lorg/telegram/tgnet/TLRPC$TL_phone_getCallConfig;
               Lorg/telegram/tgnet/TLRPC$TL_secureCredentialsEncrypted;
               Lorg/telegram/tgnet/TLRPC$TL_securePasswordKdfAlgoPBKDF2HMACSHA512iter100000;
               Lorg/telegram/tgnet/TLRPC$TL_securePasswordKdfAlgoSHA512;
               Lorg/telegram/tgnet/TLRPC$TL_secureSecretSettings;
               Lorg/telegram/tgnet/TLRPC$TL_updateConfig;
               Lorg/telegram/tgnet/TLRPC$TL_updateEncryptedChatTyping;
               Lorg/telegram/tgnet/TLRPC$TL_updateEncryptedMessagesRead;
               Lorg/telegram/tgnet/TLRPC$TL_updateEncryption;
               Lorg/telegram/tgnet/TLRPC$TL_updateNewEncryptedMessage;
               Lorg/telegram/tgnet/TLRPC$TL_updateNotifySettings;
               Lorg/telegram/tgnet/TLRPC$TL_videoEncrypted;
               Lorg/telegram/ui/Cells/EditTextSettingsCell;
               Lorg/telegram/ui/Cells/TextDetailSettingsCell;
               Lorg/telegram/ui/Cells/TextSettingsCell;
               Lorg/telegram/ui/Components/InstantCameraView$EncoderHandler;
               Lorg/telegram/ui/DataSettingsActivity$1;
               Lorg/telegram/ui/DataSettingsActivity$2$1;
               Lorg/telegram/ui/DataSettingsActivity$2$2;
               Lorg/telegram/ui/DataSettingsActivity$2;
               Lorg/telegram/ui/DataSettingsActivity$3;
               Lorg/telegram/ui/DataSettingsActivity$ListAdapter;
               Lorg/telegram/ui/DataSettingsActivity;
               Lorg/telegram/ui/NotificationsSettingsActivity$$Lambda$0;
               Lorg/telegram/ui/NotificationsSettingsActivity$$Lambda$10;
               Lorg/telegram/ui/NotificationsSettingsActivity$$Lambda$11;
               Lorg/telegram/ui/NotificationsSettingsActivity$$Lambda$1;
               Lorg/telegram/ui/NotificationsSettingsActivity$$Lambda$2;
               Lorg/telegram/ui/NotificationsSettingsActivity$$Lambda$3;
               Lorg/telegram/ui/NotificationsSettingsActivity$$Lambda$4;
               Lorg/telegram/ui/NotificationsSettingsActivity$$Lambda$5;
               Lorg/telegram/ui/NotificationsSettingsActivity$$Lambda$6;
               Lorg/telegram/ui/NotificationsSettingsActivity$$Lambda$7;
               Lorg/telegram/ui/NotificationsSettingsActivity$$Lambda$8;
               Lorg/telegram/ui/NotificationsSettingsActivity$$Lambda$9;
               Lorg/telegram/ui/NotificationsSettingsActivity$1;
               Lorg/telegram/ui/NotificationsSettingsActivity$2;
               Lorg/telegram/ui/NotificationsSettingsActivity$ListAdapter;
               Lorg/telegram/ui/NotificationsSettingsActivity$NotificationException;
               Lorg/telegram/ui/NotificationsSettingsActivity;
               Lorg/telegram/ui/PassportActivity$EncryptionResult;
               Lorg/telegram/ui/PrivacySettingsActivity$$Lambda$0;
               Lorg/telegram/ui/PrivacySettingsActivity$$Lambda$10;
               Lorg/telegram/ui/PrivacySettingsActivity$$Lambda$11;
               Lorg/telegram/ui/PrivacySettingsActivity$$Lambda$12;
               Lorg/telegram/ui/PrivacySettingsActivity$$Lambda$13;
               Lorg/telegram/ui/PrivacySettingsActivity$$Lambda$14;
               Lorg/telegram/ui/PrivacySettingsActivity$$Lambda$15;
               Lorg/telegram/ui/PrivacySettingsActivity$$Lambda$16;
               Lorg/telegram/ui/PrivacySettingsActivity$$Lambda$17;
               Lorg/telegram/ui/PrivacySettingsActivity$$Lambda$18;
               Lorg/telegram/ui/PrivacySettingsActivity$$Lambda$19;
               Lorg/telegram/ui/PrivacySettingsActivity$$Lambda$1;
               Lorg/telegram/ui/PrivacySettingsActivity$$Lambda$20;
               Lorg/telegram/ui/PrivacySettingsActivity$$Lambda$2;
               Lorg/telegram/ui/PrivacySettingsActivity$$Lambda$3;
               Lorg/telegram/ui/PrivacySettingsActivity$$Lambda$4;
               Lorg/telegram/ui/PrivacySettingsActivity$$Lambda$5;
               Lorg/telegram/ui/PrivacySettingsActivity$$Lambda$6;
               Lorg/telegram/ui/PrivacySettingsActivity$$Lambda$7;
               Lorg/telegram/ui/PrivacySettingsActivity$$Lambda$8;
               Lorg/telegram/ui/PrivacySettingsActivity$$Lambda$9;
               Lorg/telegram/ui/PrivacySettingsActivity$1;
               Lorg/telegram/ui/PrivacySettingsActivity$2;
               Lorg/telegram/ui/PrivacySettingsActivity$ListAdapter;
               Lorg/telegram/ui/PrivacySettingsActivity;
               Lorg/telegram/ui/ProxySettingsActivity$1;
               Lorg/telegram/ui/ProxySettingsActivity$2;
               Lorg/telegram/ui/ProxySettingsActivity$3;
               Lorg/telegram/ui/ProxySettingsActivity$4;
               Lorg/telegram/ui/ProxySettingsActivity$5;
               Lorg/telegram/ui/ProxySettingsActivity$6;
               Lorg/telegram/ui/ProxySettingsActivity$TypeCell;
               Lorg/telegram/ui/ProxySettingsActivity;
               Lorg/telegram/ui/QuickRepliesSettingsActivity$1;
               Lorg/telegram/ui/QuickRepliesSettingsActivity$2;
               Lorg/telegram/ui/QuickRepliesSettingsActivity$ListAdapter;
               Lorg/telegram/ui/QuickRepliesSettingsActivity;
               Lorg/telegram/ui/SettingsActivity$$Lambda$0;
               Lorg/telegram/ui/SettingsActivity$$Lambda$1;
               Lorg/telegram/ui/SettingsActivity$$Lambda$2;
               Lorg/telegram/ui/SettingsActivity$$Lambda$3;
               Lorg/telegram/ui/SettingsActivity$$Lambda$4;
               Lorg/telegram/ui/SettingsActivity$$Lambda$5;
               Lorg/telegram/ui/SettingsActivity$$Lambda$6;
               Lorg/telegram/ui/SettingsActivity$$Lambda$7;
               Lorg/telegram/ui/SettingsActivity$$Lambda$8;
               Lorg/telegram/ui/SettingsActivity$10;
               Lorg/telegram/ui/SettingsActivity$1;
               Lorg/telegram/ui/SettingsActivity$2$$Lambda$0;
               Lorg/telegram/ui/SettingsActivity$2;
               Lorg/telegram/ui/SettingsActivity$3;
               Lorg/telegram/ui/SettingsActivity$4;
               Lorg/telegram/ui/SettingsActivity$5$$Lambda$0;
               Lorg/telegram/ui/SettingsActivity$5$$Lambda$1;
               Lorg/telegram/ui/SettingsActivity$5$$Lambda$2;
               Lorg/telegram/ui/SettingsActivity$5$$Lambda$3;
               Lorg/telegram/ui/SettingsActivity$5$$Lambda$4;
               Lorg/telegram/ui/SettingsActivity$5$$Lambda$5;
               Lorg/telegram/ui/SettingsActivity$5$1;
               Lorg/telegram/ui/SettingsActivity$5;
               Lorg/telegram/ui/SettingsActivity$6$$Lambda$0;
               Lorg/telegram/ui/SettingsActivity$6;
               Lorg/telegram/ui/SettingsActivity$7;
               Lorg/telegram/ui/SettingsActivity$8;
               Lorg/telegram/ui/SettingsActivity$9;
               Lorg/telegram/ui/SettingsActivity$LinkMovementMethodMy;
               Lorg/telegram/ui/SettingsActivity$ListAdapter;
               Lorg/telegram/ui/SettingsActivity;
[Notice]  Security Methods Checking:
           Find some security-related method names:
               Lcom/coremedia/iso/Hex;->decodeHex(Ljava/lang/String;)[B
               Lcom/coremedia/iso/Hex;->encodeHex([B)Ljava/lang/String;
               Lcom/coremedia/iso/Hex;->encodeHex([B I)Ljava/lang/String;
               Lcom/coremedia/iso/boxes/OmaDrmAccessUnitFormatBox;->isSelectiveEncryption()Z
               Lcom/coremedia/iso/boxes/fragment/TrackFragmentBaseMediaDecodeTimeBox;->getBaseMediaDecodeTime()J
               Lcom/coremedia/iso/boxes/fragment/TrackFragmentBaseMediaDecodeTimeBox;->setBaseMediaDecodeTime(J)V
               Lcom/coremedia/iso/boxes/sampleentry/AmrSpecificBox;->getDecoderVersion()I
               Lcom/google/android/exoplayer2/BaseRenderer;->getConfiguration()Lcom/google/android/exoplayer2/RendererConfiguration;
               Lcom/google/android/exoplayer2/NoSampleRenderer;->getConfiguration()Lcom/google/android/exoplayer2/RendererConfiguration;
               Lcom/google/android/exoplayer2/audio/AudioRendererEventListener;->onAudioDecoderInitialized(Ljava/lang/String; J J)V
               Lcom/google/android/exoplayer2/video/VideoRendererEventListener;->onVideoDecoderInitialized(Ljava/lang/String; J J)V
               Lcom/google/android/exoplayer2/SimpleExoPlayer$ComponentListener;->onAudioDecoderInitialized(Ljava/lang/String; J J)V
               Lcom/google/android/exoplayer2/SimpleExoPlayer$ComponentListener;->onVideoDecoderInitialized(Ljava/lang/String; J J)V
               Lcom/google/android/exoplayer2/SimpleExoPlayer;->getAudioDecoderCounters()Lcom/google/android/exoplayer2/decoder/DecoderCount
                    ers;
               Lcom/google/android/exoplayer2/SimpleExoPlayer;->getVideoDecoderCounters()Lcom/google/android/exoplayer2/decoder/DecoderCount
                    ers;
               Lcom/google/android/exoplayer2/analytics/AnalyticsCollector;->onAudioDecoderInitialized(Ljava/lang/String; J J)V
               Lcom/google/android/exoplayer2/analytics/AnalyticsCollector;->onVideoDecoderInitialized(Ljava/lang/String; J J)V
               Lcom/google/android/exoplayer2/analytics/AnalyticsListener$$CC;->onDecoderDisabled(Lcom/google/android/exoplayer2/analytics/A
                    nalyticsListener; Lcom/google/android/exoplayer2/analytics/AnalyticsListener$EventTime; I
                    Lcom/google/android/exoplayer2/decoder/DecoderCounters;)V
               Lcom/google/android/exoplayer2/analytics/AnalyticsListener$$CC;->onDecoderEnabled(Lcom/google/android/exoplayer2/analytics/An
                    alyticsListener; Lcom/google/android/exoplayer2/analytics/AnalyticsListener$EventTime; I
                    Lcom/google/android/exoplayer2/decoder/DecoderCounters;)V
               Lcom/google/android/exoplayer2/analytics/AnalyticsListener$$CC;->onDecoderInitialized(Lcom/google/android/exoplayer2/analytic
                    s/AnalyticsListener; Lcom/google/android/exoplayer2/analytics/AnalyticsListener$EventTime; I Ljava/lang/String; J)V
               Lcom/google/android/exoplayer2/analytics/AnalyticsListener$$CC;->onDecoderInputFormatChanged(Lcom/google/android/exoplayer2/a
                    nalytics/AnalyticsListener; Lcom/google/android/exoplayer2/analytics/AnalyticsListener$EventTime; I
                    Lcom/google/android/exoplayer2/Format;)V
               Lcom/google/android/exoplayer2/analytics/AnalyticsListener;->onDecoderDisabled(Lcom/google/android/exoplayer2/analytics/Analy
                    ticsListener$EventTime; I Lcom/google/android/exoplayer2/decoder/DecoderCounters;)V
               Lcom/google/android/exoplayer2/analytics/AnalyticsListener;->onDecoderEnabled(Lcom/google/android/exoplayer2/analytics/Analyt
                    icsListener$EventTime; I Lcom/google/android/exoplayer2/decoder/DecoderCounters;)V
               Lcom/google/android/exoplayer2/analytics/AnalyticsListener;->onDecoderInitialized(Lcom/google/android/exoplayer2/analytics/An
                    alyticsListener$EventTime; I Ljava/lang/String; J)V
               Lcom/google/android/exoplayer2/analytics/AnalyticsListener;->onDecoderInputFormatChanged(Lcom/google/android/exoplayer2/analy
                    tics/AnalyticsListener$EventTime; I Lcom/google/android/exoplayer2/Format;)V
               Lcom/google/android/exoplayer2/analytics/DefaultAnalyticsListener;->onDecoderDisabled(Lcom/google/android/exoplayer2/analytic
                    s/AnalyticsListener$EventTime; I Lcom/google/android/exoplayer2/decoder/DecoderCounters;)V
               Lcom/google/android/exoplayer2/analytics/DefaultAnalyticsListener;->onDecoderEnabled(Lcom/google/android/exoplayer2/analytics
                    /AnalyticsListener$EventTime; I Lcom/google/android/exoplayer2/decoder/DecoderCounters;)V
               Lcom/google/android/exoplayer2/analytics/DefaultAnalyticsListener;->onDecoderInitialized(Lcom/google/android/exoplayer2/analy
                    tics/AnalyticsListener$EventTime; I Ljava/lang/String; J)V
               Lcom/google/android/exoplayer2/analytics/DefaultAnalyticsListener;->onDecoderInputFormatChanged(Lcom/google/android/exoplayer
                    2/analytics/AnalyticsListener$EventTime; I Lcom/google/android/exoplayer2/Format;)V
               Lcom/google/android/exoplayer2/audio/AudioCapabilities;->supportsEncoding(I)Z
               Lcom/google/android/exoplayer2/audio/AudioProcessor;->configure(I I I)Z
               Lcom/google/android/exoplayer2/audio/AudioProcessor;->getOutputEncoding()I
               Lcom/google/android/exoplayer2/audio/AudioRendererEventListener$EventDispatcher;->decoderInitialized(Ljava/lang/String; J J)V
               Lcom/google/android/exoplayer2/audio/AudioSink;->configure(I I I I [I I I)V
               Lcom/google/android/exoplayer2/audio/AudioSink;->isEncodingSupported(I)Z
               Lcom/google/android/exoplayer2/audio/ChannelMappingAudioProcessor;->configure(I I I)Z
               Lcom/google/android/exoplayer2/audio/ChannelMappingAudioProcessor;->getOutputEncoding()I
               Lcom/google/android/exoplayer2/audio/DefaultAudioSink;->getFramesPerEncodedSample(I Ljava/nio/ByteBuffer;)I
               Lcom/google/android/exoplayer2/audio/DefaultAudioSink;->configure(I I I I [I I I)V
               Lcom/google/android/exoplayer2/audio/DefaultAudioSink;->isEncodingSupported(I)Z
               Lcom/google/android/exoplayer2/audio/FloatResamplingAudioProcessor;->configure(I I I)Z
               Lcom/google/android/exoplayer2/audio/FloatResamplingAudioProcessor;->getOutputEncoding()I
               Lcom/google/android/exoplayer2/mediacodec/MediaCodecRenderer;->deviceNeedsDrmKeysToConfigureCodecWorkaround()Z
               Lcom/google/android/exoplayer2/mediacodec/MediaCodecRenderer;->configureCodec(Lcom/google/android/exoplayer2/mediacodec/Media
                    CodecInfo; Landroid/media/MediaCodec; Lcom/google/android/exoplayer2/Format; Landroid/media/MediaCrypto; F)V
               Lcom/google/android/exoplayer2/mediacodec/MediaCodecRenderer;->getDecoderInfos(Lcom/google/android/exoplayer2/mediacodec/Medi
                    aCodecSelector; Lcom/google/android/exoplayer2/Format; Z)Ljava/util/List;
               Lcom/google/android/exoplayer2/audio/MediaCodecAudioRenderer;->configureCodec(Lcom/google/android/exoplayer2/mediacodec/Media
                    CodecInfo; Landroid/media/MediaCodec; Lcom/google/android/exoplayer2/Format; Landroid/media/MediaCrypto; F)V
               Lcom/google/android/exoplayer2/audio/MediaCodecAudioRenderer;->getDecoderInfos(Lcom/google/android/exoplayer2/mediacodec/Medi
                    aCodecSelector; Lcom/google/android/exoplayer2/Format; Z)Ljava/util/List;
               Lcom/google/android/exoplayer2/audio/ResamplingAudioProcessor;->configure(I I I)Z
               Lcom/google/android/exoplayer2/audio/ResamplingAudioProcessor;->getOutputEncoding()I
               Lcom/google/android/exoplayer2/audio/SilenceSkippingAudioProcessor;->configure(I I I)Z
               Lcom/google/android/exoplayer2/audio/SilenceSkippingAudioProcessor;->getOutputEncoding()I
               Lcom/google/android/exoplayer2/audio/SimpleDecoderAudioRenderer;->flushDecoder()V
               Lcom/google/android/exoplayer2/audio/SimpleDecoderAudioRenderer;->maybeInitDecoder()V
               Lcom/google/android/exoplayer2/audio/SimpleDecoderAudioRenderer;->releaseDecoder()V
               Lcom/google/android/exoplayer2/audio/SimpleDecoderAudioRenderer;->createDecoder(Lcom/google/android/exoplayer2/Format;
                    Lcom/google/android/exoplayer2/drm/ExoMediaCrypto;)Lcom/google/android/exoplayer2/decoder/SimpleDecoder;
               Lcom/google/android/exoplayer2/audio/SimpleDecoderAudioRenderer;->supportsOutputEncoding(I)Z
               Lcom/google/android/exoplayer2/audio/SonicAudioProcessor;->configure(I I I)Z
               Lcom/google/android/exoplayer2/audio/SonicAudioProcessor;->getOutputEncoding()I
               Lcom/google/android/exoplayer2/audio/TrimmingAudioProcessor;->configure(I I I)Z
               Lcom/google/android/exoplayer2/audio/TrimmingAudioProcessor;->getOutputEncoding()I
               Lcom/google/android/exoplayer2/decoder/Buffer;->isDecodeOnly()Z
               Lcom/google/android/exoplayer2/decoder/DecoderInputBuffer;->isEncrypted()Z
               Lcom/google/android/exoplayer2/decoder/SimpleDecoder;->canDecodeBuffer()Z
               Lcom/google/android/exoplayer2/decoder/SimpleDecoder;->decode()Z
               Lcom/google/android/exoplayer2/decoder/SimpleDecoder;->maybeNotifyDecodeLoop()V
               Lcom/google/android/exoplayer2/decoder/SimpleDecoder;->createUnexpectedDecodeException(Ljava/lang/Throwable;)Ljava/lang/Excep
                    tion;
               Lcom/google/android/exoplayer2/decoder/SimpleDecoder;->decode(Lcom/google/android/exoplayer2/decoder/DecoderInputBuffer;
                    Lcom/google/android/exoplayer2/decoder/OutputBuffer; Z)Ljava/lang/Exception;
               Lcom/google/android/exoplayer2/drm/ExoMediaCrypto;->requiresSecureDecoderComponent(Ljava/lang/String;)Z
               Lcom/google/android/exoplayer2/drm/FrameworkMediaCrypto;->requiresSecureDecoderComponent(Ljava/lang/String;)Z
               Lcom/google/android/exoplayer2/ext/ffmpeg/FfmpegAudioRenderer;->createDecoder(Lcom/google/android/exoplayer2/Format;
                    Lcom/google/android/exoplayer2/drm/ExoMediaCrypto;)Lcom/google/android/exoplayer2/decoder/SimpleDecoder;
               Lcom/google/android/exoplayer2/ext/ffmpeg/FfmpegAudioRenderer;->createDecoder(Lcom/google/android/exoplayer2/Format;
                    Lcom/google/android/exoplayer2/drm/ExoMediaCrypto;)Lcom/google/android/exoplayer2/ext/ffmpeg/FfmpegDecoder;
               Lcom/google/android/exoplayer2/ext/ffmpeg/FfmpegDecoder;->ffmpegDecode(J Ljava/nio/ByteBuffer; I Ljava/nio/ByteBuffer; I)I
               Lcom/google/android/exoplayer2/ext/ffmpeg/FfmpegDecoder;->createUnexpectedDecodeException(Ljava/lang/Throwable;)Lcom/google/a
                    ndroid/exoplayer2/ext/ffmpeg/FfmpegDecoderException;
               Lcom/google/android/exoplayer2/ext/ffmpeg/FfmpegDecoder;->createUnexpectedDecodeException(Ljava/lang/Throwable;)Ljava/lang/Ex
                    ception;
               Lcom/google/android/exoplayer2/ext/ffmpeg/FfmpegDecoder;->decode(Lcom/google/android/exoplayer2/decoder/DecoderInputBuffer;
                    Lcom/google/android/exoplayer2/decoder/SimpleOutputBuffer;
                    Z)Lcom/google/android/exoplayer2/ext/ffmpeg/FfmpegDecoderException;
               Lcom/google/android/exoplayer2/ext/ffmpeg/FfmpegDecoder;->decode(Lcom/google/android/exoplayer2/decoder/DecoderInputBuffer;
                    Lcom/google/android/exoplayer2/decoder/OutputBuffer; Z)Ljava/lang/Exception;
               Lcom/google/android/exoplayer2/ext/ffmpeg/FfmpegDecoder;->getEncoding()I
               Lcom/google/android/exoplayer2/ext/ffmpeg/FfmpegLibrary;->ffmpegHasDecoder(Ljava/lang/String;)Z
               Lcom/google/android/exoplayer2/ext/flac/FlacDecoder;->createUnexpectedDecodeException(Ljava/lang/Throwable;)Lcom/google/andro
                    id/exoplayer2/ext/flac/FlacDecoderException;
               Lcom/google/android/exoplayer2/ext/flac/FlacDecoder;->createUnexpectedDecodeException(Ljava/lang/Throwable;)Ljava/lang/Except
                    ion;
               Lcom/google/android/exoplayer2/ext/flac/FlacDecoder;->decode(Lcom/google/android/exoplayer2/decoder/DecoderInputBuffer;
                    Lcom/google/android/exoplayer2/decoder/SimpleOutputBuffer;
                    Z)Lcom/google/android/exoplayer2/ext/flac/FlacDecoderException;
               Lcom/google/android/exoplayer2/ext/flac/FlacDecoder;->decode(Lcom/google/android/exoplayer2/decoder/DecoderInputBuffer;
                    Lcom/google/android/exoplayer2/decoder/OutputBuffer; Z)Ljava/lang/Exception;
               Lcom/google/android/exoplayer2/ext/flac/FlacDecoderJni;->flacDecodeMetadata(J)Lcom/google/android/exoplayer2/util/FlacStreamI
                    nfo;
               Lcom/google/android/exoplayer2/ext/flac/FlacDecoderJni;->flacDecodeToArray(J [B)I
               Lcom/google/android/exoplayer2/ext/flac/FlacDecoderJni;->flacDecodeToBuffer(J Ljava/nio/ByteBuffer;)I
               Lcom/google/android/exoplayer2/ext/flac/FlacDecoderJni;->flacGetDecodePosition(J)J
               Lcom/google/android/exoplayer2/ext/flac/FlacDecoderJni;->flacIsDecoderAtEndOfStream(J)Z
               Lcom/google/android/exoplayer2/ext/flac/FlacDecoderJni;->decodeMetadata()Lcom/google/android/exoplayer2/util/FlacStreamInfo;
               Lcom/google/android/exoplayer2/ext/flac/FlacDecoderJni;->decodeSample(Ljava/nio/ByteBuffer;)V
               Lcom/google/android/exoplayer2/ext/flac/FlacDecoderJni;->decodeSampleWithBacktrackPosition(Ljava/nio/ByteBuffer; J)V
               Lcom/google/android/exoplayer2/ext/flac/FlacDecoderJni;->getDecodePosition()J
               Lcom/google/android/exoplayer2/ext/flac/FlacDecoderJni;->isDecoderAtEndOfInput()Z
               Lcom/google/android/exoplayer2/ext/flac/FlacExtractor;->decodeStreamInfo(Lcom/google/android/exoplayer2/extractor/ExtractorIn
                    put;)Lcom/google/android/exoplayer2/util/FlacStreamInfo;
               Lcom/google/android/exoplayer2/ext/flac/LibflacAudioRenderer;->createDecoder(Lcom/google/android/exoplayer2/Format;
                    Lcom/google/android/exoplayer2/drm/ExoMediaCrypto;)Lcom/google/android/exoplayer2/decoder/SimpleDecoder;
               Lcom/google/android/exoplayer2/ext/flac/LibflacAudioRenderer;->createDecoder(Lcom/google/android/exoplayer2/Format;
                    Lcom/google/android/exoplayer2/drm/ExoMediaCrypto;)Lcom/google/android/exoplayer2/ext/flac/FlacDecoder;
               Lcom/google/android/exoplayer2/ext/opus/LibopusAudioRenderer;->createDecoder(Lcom/google/android/exoplayer2/Format;
                    Lcom/google/android/exoplayer2/drm/ExoMediaCrypto;)Lcom/google/android/exoplayer2/decoder/SimpleDecoder;
               Lcom/google/android/exoplayer2/ext/opus/LibopusAudioRenderer;->createDecoder(Lcom/google/android/exoplayer2/Format;
                    Lcom/google/android/exoplayer2/drm/ExoMediaCrypto;)Lcom/google/android/exoplayer2/ext/opus/OpusDecoder;
               Lcom/google/android/exoplayer2/ext/opus/OpusDecoder;->opusDecode(J J Ljava/nio/ByteBuffer; I
                    Lcom/google/android/exoplayer2/decoder/SimpleOutputBuffer;)I
               Lcom/google/android/exoplayer2/ext/opus/OpusDecoder;->opusSecureDecode(J J Ljava/nio/ByteBuffer; I
                    Lcom/google/android/exoplayer2/decoder/SimpleOutputBuffer; I Lcom/google/android/exoplayer2/drm/ExoMediaCrypto; I [B [B
                    I [I [I)I
               Lcom/google/android/exoplayer2/ext/opus/OpusDecoder;->createUnexpectedDecodeException(Ljava/lang/Throwable;)Lcom/google/andro
                    id/exoplayer2/ext/opus/OpusDecoderException;
               Lcom/google/android/exoplayer2/ext/opus/OpusDecoder;->createUnexpectedDecodeException(Ljava/lang/Throwable;)Ljava/lang/Except
                    ion;
               Lcom/google/android/exoplayer2/ext/opus/OpusDecoder;->decode(Lcom/google/android/exoplayer2/decoder/DecoderInputBuffer;
                    Lcom/google/android/exoplayer2/decoder/SimpleOutputBuffer;
                    Z)Lcom/google/android/exoplayer2/ext/opus/OpusDecoderException;
               Lcom/google/android/exoplayer2/ext/opus/OpusDecoder;->decode(Lcom/google/android/exoplayer2/decoder/DecoderInputBuffer;
                    Lcom/google/android/exoplayer2/decoder/OutputBuffer; Z)Ljava/lang/Exception;
               Lcom/google/android/exoplayer2/extractor/amr/AmrExtractor;->getConstantBitrateSeekMap(J)Lcom/google/android/exoplayer2/extrac
                    tor/SeekMap;
               Lcom/google/android/exoplayer2/extractor/mp3/Mp3Extractor;->getConstantBitrateSeeker(Lcom/google/android/exoplayer2/extractor
                    /ExtractorInput;)Lcom/google/android/exoplayer2/extractor/mp3/Mp3Extractor$Seeker;
               Lcom/google/android/exoplayer2/extractor/mp4/AtomParsers;->parseCommonEncryptionSinfFromParent(Lcom/google/android/exoplayer2
                    /util/ParsableByteArray; I I)Landroid/util/Pair;
               Lcom/google/android/exoplayer2/extractor/mp4/AtomParsers;->parseSampleEntryEncryptionData(Lcom/google/android/exoplayer2/util
                    /ParsableByteArray; I I)Landroid/util/Pair;
               Lcom/google/android/exoplayer2/extractor/mp4/FragmentedMp4Extractor$TrackBundle;->getEncryptionBox()Lcom/google/android/exopl
                    ayer2/extractor/mp4/TrackEncryptionBox;
               Lcom/google/android/exoplayer2/extractor/mp4/FragmentedMp4Extractor$TrackBundle;->skipSampleEncryptionData()V
               Lcom/google/android/exoplayer2/extractor/mp4/FragmentedMp4Extractor$TrackBundle;->outputSampleEncryptionData()I
               Lcom/google/android/exoplayer2/extractor/mp4/FragmentedMp4Extractor;->readEncryptionData(Lcom/google/android/exoplayer2/extra
                    ctor/ExtractorInput;)V
               Lcom/google/android/exoplayer2/extractor/mp4/Track;->getSampleDescriptionEncryptionBox(I)Lcom/google/android/exoplayer2/extra
                    ctor/mp4/TrackEncryptionBox;
               Lcom/google/android/exoplayer2/extractor/mp4/TrackFragment;->fillEncryptionData(Lcom/google/android/exoplayer2/extractor/Extr
                    actorInput;)V
               Lcom/google/android/exoplayer2/extractor/mp4/TrackFragment;->fillEncryptionData(Lcom/google/android/exoplayer2/util/ParsableB
                    yteArray;)V
               Lcom/google/android/exoplayer2/extractor/mp4/TrackFragment;->initEncryptionData(I)V
               Lcom/google/android/exoplayer2/extractor/ogg/VorbisReader;->decodeBlockSize(B
                    Lcom/google/android/exoplayer2/extractor/ogg/VorbisReader$VorbisSetup;)I
               Lcom/google/android/exoplayer2/extractor/ts/LatmReader;->parseAudioSpecificConfig(Lcom/google/android/exoplayer2/util/Parsabl
                    eBitArray;)I
               Lcom/google/android/exoplayer2/extractor/ts/LatmReader;->parseStreamMuxConfig(Lcom/google/android/exoplayer2/util/ParsableBit
                    Array;)V
               Lcom/google/android/exoplayer2/extractor/wav/WavHeader;->getEncoding()I
               Lcom/google/android/exoplayer2/mediacodec/MediaCodecSelector;->getDecoderInfos(Lcom/google/android/exoplayer2/Format;
                    Z)Ljava/util/List;
               Lcom/google/android/exoplayer2/mediacodec/MediaCodecSelector;->getPassthroughDecoderInfo()Lcom/google/android/exoplayer2/medi
                    acodec/MediaCodecInfo;
               Lcom/google/android/exoplayer2/mediacodec/MediaCodecSelector$1;->getDecoderInfos(Lcom/google/android/exoplayer2/Format;
                    Z)Ljava/util/List;
               Lcom/google/android/exoplayer2/mediacodec/MediaCodecSelector$1;->getPassthroughDecoderInfo()Lcom/google/android/exoplayer2/me
                    diacodec/MediaCodecInfo;
               Lcom/google/android/exoplayer2/mediacodec/MediaCodecSelector$2;->getDecoderInfos(Lcom/google/android/exoplayer2/Format;
                    Z)Ljava/util/List;
               Lcom/google/android/exoplayer2/mediacodec/MediaCodecSelector$2;->getPassthroughDecoderInfo()Lcom/google/android/exoplayer2/me
                    diacodec/MediaCodecInfo;
               Lcom/google/android/exoplayer2/mediacodec/MediaCodecUtil$MediaCodecListCompat;->secureDecodersExplicit()Z
               Lcom/google/android/exoplayer2/mediacodec/MediaCodecUtil$MediaCodecListCompatV16;->secureDecodersExplicit()Z
               Lcom/google/android/exoplayer2/mediacodec/MediaCodecUtil$MediaCodecListCompatV21;->secureDecodersExplicit()Z
               Lcom/google/android/exoplayer2/mediacodec/MediaCodecUtil;->getDecoderInfo(Ljava/lang/String;
                    Z)Lcom/google/android/exoplayer2/mediacodec/MediaCodecInfo;
               Lcom/google/android/exoplayer2/mediacodec/MediaCodecUtil;->getDecoderInfos(Ljava/lang/String; Z)Ljava/util/List;
               Lcom/google/android/exoplayer2/mediacodec/MediaCodecUtil;->getDecoderInfosInternal(Lcom/google/android/exoplayer2/mediacodec/
                    MediaCodecUtil$CodecKey; Lcom/google/android/exoplayer2/mediacodec/MediaCodecUtil$MediaCodecListCompat;
                    Ljava/lang/String;)Ljava/util/ArrayList;
               Lcom/google/android/exoplayer2/mediacodec/MediaCodecUtil;->getPassthroughDecoderInfo()Lcom/google/android/exoplayer2/mediacod
                    ec/MediaCodecInfo;
               Lcom/google/android/exoplayer2/mediacodec/MediaCodecUtil;->isCodecUsableDecoder(Landroid/media/MediaCodecInfo;
                    Ljava/lang/String; Z Ljava/lang/String;)Z
               Lcom/google/android/exoplayer2/mediacodec/MediaCodecUtil;->maxH264DecodableFrameSize()I
               Lcom/google/android/exoplayer2/mediacodec/MediaCodecUtil;->warmDecoderInfoCache(Ljava/lang/String; Z)V
               Lcom/google/android/exoplayer2/metadata/MetadataDecoder;->decode(Lcom/google/android/exoplayer2/metadata/MetadataInputBuffer;
                    )Lcom/google/android/exoplayer2/metadata/Metadata;
               Lcom/google/android/exoplayer2/metadata/MetadataDecoderFactory;->createDecoder(Lcom/google/android/exoplayer2/Format;)Lcom/go
                    ogle/android/exoplayer2/metadata/MetadataDecoder;
               Lcom/google/android/exoplayer2/metadata/MetadataDecoderFactory$1;->createDecoder(Lcom/google/android/exoplayer2/Format;)Lcom/
                    google/android/exoplayer2/metadata/MetadataDecoder;
               Lcom/google/android/exoplayer2/metadata/emsg/EventMessageDecoder;->decode(Lcom/google/android/exoplayer2/metadata/MetadataInp
                    utBuffer;)Lcom/google/android/exoplayer2/metadata/Metadata;
               Lcom/google/android/exoplayer2/metadata/emsg/EventMessageEncoder;->encode(Lcom/google/android/exoplayer2/metadata/emsg/EventM
                    essage; J)[B
               Lcom/google/android/exoplayer2/metadata/id3/Id3Decoder;->decodeApicFrame(Lcom/google/android/exoplayer2/util/ParsableByteArra
                    y; I I)Lcom/google/android/exoplayer2/metadata/id3/ApicFrame;
               Lcom/google/android/exoplayer2/metadata/id3/Id3Decoder;->decodeBinaryFrame(Lcom/google/android/exoplayer2/util/ParsableByteAr
                    ray; I Ljava/lang/String;)Lcom/google/android/exoplayer2/metadata/id3/BinaryFrame;
               Lcom/google/android/exoplayer2/metadata/id3/Id3Decoder;->decodeChapterFrame(Lcom/google/android/exoplayer2/util/ParsableByteA
                    rray; I I Z I Lcom/google/android/exoplayer2/metadata/id3/Id3Decoder$FramePredicate;)Lcom/google/android/exoplayer2/meta
                    data/id3/ChapterFrame;
               Lcom/google/android/exoplayer2/metadata/id3/Id3Decoder;->decodeChapterTOCFrame(Lcom/google/android/exoplayer2/util/ParsableBy
                    teArray; I I Z I Lcom/google/android/exoplayer2/metadata/id3/Id3Decoder$FramePredicate;)Lcom/google/android/exoplayer2/m
                    etadata/id3/ChapterTocFrame;
               Lcom/google/android/exoplayer2/metadata/id3/Id3Decoder;->decodeCommentFrame(Lcom/google/android/exoplayer2/util/ParsableByteA
                    rray; I)Lcom/google/android/exoplayer2/metadata/id3/CommentFrame;
               Lcom/google/android/exoplayer2/metadata/id3/Id3Decoder;->decodeFrame(I Lcom/google/android/exoplayer2/util/ParsableByteArray;
                    Z I Lcom/google/android/exoplayer2/metadata/id3/Id3Decoder$FramePredicate;)Lcom/google/android/exoplayer2/metadata/id3/I
                    d3Frame;
               Lcom/google/android/exoplayer2/metadata/id3/Id3Decoder;->decodeGeobFrame(Lcom/google/android/exoplayer2/util/ParsableByteArra
                    y; I)Lcom/google/android/exoplayer2/metadata/id3/GeobFrame;
               Lcom/google/android/exoplayer2/metadata/id3/Id3Decoder;->decodeHeader(Lcom/google/android/exoplayer2/util/ParsableByteArray;)
                    Lcom/google/android/exoplayer2/metadata/id3/Id3Decoder$Id3Header;
               Lcom/google/android/exoplayer2/metadata/id3/Id3Decoder;->decodePrivFrame(Lcom/google/android/exoplayer2/util/ParsableByteArra
                    y; I)Lcom/google/android/exoplayer2/metadata/id3/PrivFrame;
               Lcom/google/android/exoplayer2/metadata/id3/Id3Decoder;->decodeStringIfValid([B I I Ljava/lang/String;)Ljava/lang/String;
               Lcom/google/android/exoplayer2/metadata/id3/Id3Decoder;->decodeTextInformationFrame(Lcom/google/android/exoplayer2/util/Parsa
                    bleByteArray; I Ljava/lang/String;)Lcom/google/android/exoplayer2/metadata/id3/TextInformationFrame;
               Lcom/google/android/exoplayer2/metadata/id3/Id3Decoder;->decodeTxxxFrame(Lcom/google/android/exoplayer2/util/ParsableByteArra
                    y; I)Lcom/google/android/exoplayer2/metadata/id3/TextInformationFrame;
               Lcom/google/android/exoplayer2/metadata/id3/Id3Decoder;->decodeUrlLinkFrame(Lcom/google/android/exoplayer2/util/ParsableByteA
                    rray; I Ljava/lang/String;)Lcom/google/android/exoplayer2/metadata/id3/UrlLinkFrame;
               Lcom/google/android/exoplayer2/metadata/id3/Id3Decoder;->decodeWxxxFrame(Lcom/google/android/exoplayer2/util/ParsableByteArra
                    y; I)Lcom/google/android/exoplayer2/metadata/id3/UrlLinkFrame;
               Lcom/google/android/exoplayer2/metadata/id3/Id3Decoder;->decode(Lcom/google/android/exoplayer2/metadata/MetadataInputBuffer;)
                    Lcom/google/android/exoplayer2/metadata/Metadata;
               Lcom/google/android/exoplayer2/metadata/id3/Id3Decoder;->decode([B I)Lcom/google/android/exoplayer2/metadata/Metadata;
               Lcom/google/android/exoplayer2/metadata/scte35/SpliceInfoDecoder;->decode(Lcom/google/android/exoplayer2/metadata/MetadataInp
                    utBuffer;)Lcom/google/android/exoplayer2/metadata/Metadata;
               Lcom/google/android/exoplayer2/source/ExtractorMediaPeriod;->configureRetry(Lcom/google/android/exoplayer2/source/ExtractorMe
                    diaPeriod$ExtractingLoadable; I)Z
               Lcom/google/android/exoplayer2/source/SampleQueue;->readEncryptionData(Lcom/google/android/exoplayer2/decoder/DecoderInputBuf
                    fer; Lcom/google/android/exoplayer2/source/SampleMetadataQueue$SampleExtrasHolder;)V
               Lcom/google/android/exoplayer2/source/dash/manifest/DashManifestParser;->parseDolbyChannelConfiguration(Lorg/xmlpull/v1/XmlPu
                    llParser;)I
               Lcom/google/android/exoplayer2/source/dash/manifest/DashManifestParser;->parseAudioChannelConfiguration(Lorg/xmlpull/v1/XmlPu
                    llParser;)I
               Lcom/google/android/exoplayer2/source/hls/HlsChunkSource;->clearEncryptionData()V
               Lcom/google/android/exoplayer2/source/hls/HlsChunkSource;->newEncryptionKeyChunk(Landroid/net/Uri; Ljava/lang/String; I I
                    Ljava/lang/Object;)Lcom/google/android/exoplayer2/source/hls/HlsChunkSource$EncryptionKeyChunk;
               Lcom/google/android/exoplayer2/source/hls/HlsChunkSource;->setEncryptionData(Landroid/net/Uri; Ljava/lang/String; [B)V
               Lcom/google/android/exoplayer2/text/SimpleSubtitleDecoder;->createUnexpectedDecodeException(Ljava/lang/Throwable;)Lcom/google
                    /android/exoplayer2/text/SubtitleDecoderException;
               Lcom/google/android/exoplayer2/text/SimpleSubtitleDecoder;->createUnexpectedDecodeException(Ljava/lang/Throwable;)Ljava/lang/
                    Exception;
               Lcom/google/android/exoplayer2/text/SimpleSubtitleDecoder;->decode([B I Z)Lcom/google/android/exoplayer2/text/Subtitle;
               Lcom/google/android/exoplayer2/text/SimpleSubtitleDecoder;->decode(Lcom/google/android/exoplayer2/text/SubtitleInputBuffer;
                    Lcom/google/android/exoplayer2/text/SubtitleOutputBuffer;
                    Z)Lcom/google/android/exoplayer2/text/SubtitleDecoderException;
               Lcom/google/android/exoplayer2/text/SimpleSubtitleDecoder;->decode(Lcom/google/android/exoplayer2/decoder/DecoderInputBuffer;
                    Lcom/google/android/exoplayer2/decoder/OutputBuffer; Z)Ljava/lang/Exception;
               Lcom/google/android/exoplayer2/text/SubtitleDecoderFactory;->createDecoder(Lcom/google/android/exoplayer2/Format;)Lcom/google
                    /android/exoplayer2/text/SubtitleDecoder;
               Lcom/google/android/exoplayer2/text/SubtitleDecoderFactory$1;->createDecoder(Lcom/google/android/exoplayer2/Format;)Lcom/goog
                    le/android/exoplayer2/text/SubtitleDecoder;
               Lcom/google/android/exoplayer2/text/TextRenderer;->releaseDecoder()V
               Lcom/google/android/exoplayer2/text/TextRenderer;->replaceDecoder()V
               Lcom/google/android/exoplayer2/text/cea/CeaDecoder;->decode(Lcom/google/android/exoplayer2/text/SubtitleInputBuffer;)V
               Lcom/google/android/exoplayer2/text/cea/Cea608Decoder;->decode(Lcom/google/android/exoplayer2/text/SubtitleInputBuffer;)V
               Lcom/google/android/exoplayer2/text/cea/Cea708Decoder;->decode(Lcom/google/android/exoplayer2/text/SubtitleInputBuffer;)V
               Lcom/google/android/exoplayer2/text/dvb/DvbDecoder;->decode([B I Z)Lcom/google/android/exoplayer2/text/Subtitle;
               Lcom/google/android/exoplayer2/text/dvb/DvbDecoder;->decode([B I Z)Lcom/google/android/exoplayer2/text/dvb/DvbSubtitle;
               Lcom/google/android/exoplayer2/text/dvb/DvbParser;->decode([B I)Ljava/util/List;
               Lcom/google/android/exoplayer2/text/pgs/PgsDecoder;->decode([B I Z)Lcom/google/android/exoplayer2/text/Subtitle;
               Lcom/google/android/exoplayer2/text/ssa/SsaDecoder;->decode([B I Z)Lcom/google/android/exoplayer2/text/Subtitle;
               Lcom/google/android/exoplayer2/text/ssa/SsaDecoder;->decode([B I Z)Lcom/google/android/exoplayer2/text/ssa/SsaSubtitle;
               Lcom/google/android/exoplayer2/text/subrip/SubripDecoder;->decode([B I Z)Lcom/google/android/exoplayer2/text/Subtitle;
               Lcom/google/android/exoplayer2/text/subrip/SubripDecoder;->decode([B I
                    Z)Lcom/google/android/exoplayer2/text/subrip/SubripSubtitle;
               Lcom/google/android/exoplayer2/text/ttml/TtmlDecoder;->decode([B I Z)Lcom/google/android/exoplayer2/text/Subtitle;
               Lcom/google/android/exoplayer2/text/ttml/TtmlDecoder;->decode([B I Z)Lcom/google/android/exoplayer2/text/ttml/TtmlSubtitle;
               Lcom/google/android/exoplayer2/text/tx3g/Tx3gDecoder;->decodeInitializationData(Ljava/util/List;)V
               Lcom/google/android/exoplayer2/text/tx3g/Tx3gDecoder;->decode([B I Z)Lcom/google/android/exoplayer2/text/Subtitle;
               Lcom/google/android/exoplayer2/text/webvtt/Mp4WebvttDecoder;->decode([B I Z)Lcom/google/android/exoplayer2/text/Subtitle;
               Lcom/google/android/exoplayer2/text/webvtt/Mp4WebvttDecoder;->decode([B I
                    Z)Lcom/google/android/exoplayer2/text/webvtt/Mp4WebvttSubtitle;
               Lcom/google/android/exoplayer2/text/webvtt/WebvttCueParser;->parseCueSettingsList(Ljava/lang/String;
                    Lcom/google/android/exoplayer2/text/webvtt/WebvttCue$Builder;)V
               Lcom/google/android/exoplayer2/text/webvtt/WebvttDecoder;->decode([B I Z)Lcom/google/android/exoplayer2/text/Subtitle;
               Lcom/google/android/exoplayer2/text/webvtt/WebvttDecoder;->decode([B I
                    Z)Lcom/google/android/exoplayer2/text/webvtt/WebvttSubtitle;
               Lcom/google/android/exoplayer2/trackselection/DefaultTrackSelector;->maybeConfigureRenderersForTunneling(Lcom/google/android/
                    exoplayer2/trackselection/MappingTrackSelector$MappedTrackInfo; [[[I
                    [Lcom/google/android/exoplayer2/RendererConfiguration; [Lcom/google/android/exoplayer2/trackselection/TrackSelection;
                    I)V
               Lcom/google/android/exoplayer2/util/CodecSpecificDataUtil;->buildAacAudioSpecificConfig(I I I)[B
               Lcom/google/android/exoplayer2/util/CodecSpecificDataUtil;->buildAacLcAudioSpecificConfig(I I)[B
               Lcom/google/android/exoplayer2/util/CodecSpecificDataUtil;->parseAacAudioSpecificConfig(Lcom/google/android/exoplayer2/util/P
                    arsableBitArray; Z)Landroid/util/Pair;
               Lcom/google/android/exoplayer2/util/CodecSpecificDataUtil;->parseAacAudioSpecificConfig([B)Landroid/util/Pair;
               Lcom/google/android/exoplayer2/util/CodecSpecificDataUtil;->parseGaSpecificConfig(Lcom/google/android/exoplayer2/util/Parsabl
                    eBitArray; I I)V
               Lcom/google/android/exoplayer2/util/EGLSurfaceTexture;->chooseEGLConfig(Landroid/opengl/EGLDisplay;)Landroid/opengl/EGLConfig
                    ;
               Lcom/google/android/exoplayer2/util/EventLogger;->onDecoderDisabled(Lcom/google/android/exoplayer2/analytics/AnalyticsListene
                    r$EventTime; I Lcom/google/android/exoplayer2/decoder/DecoderCounters;)V
               Lcom/google/android/exoplayer2/util/EventLogger;->onDecoderEnabled(Lcom/google/android/exoplayer2/analytics/AnalyticsListener
                    $EventTime; I Lcom/google/android/exoplayer2/decoder/DecoderCounters;)V
               Lcom/google/android/exoplayer2/util/EventLogger;->onDecoderInitialized(Lcom/google/android/exoplayer2/analytics/AnalyticsList
                    ener$EventTime; I Ljava/lang/String; J)V
               Lcom/google/android/exoplayer2/util/EventLogger;->onDecoderInputFormatChanged(Lcom/google/android/exoplayer2/analytics/Analyt
                    icsListener$EventTime; I Lcom/google/android/exoplayer2/Format;)V
               Lcom/google/android/exoplayer2/util/FlacStreamInfo;->maxDecodedFrameSize()I
               Lcom/google/android/exoplayer2/util/MimeTypes;->getEncoding(Ljava/lang/String;)I
               Lcom/google/android/exoplayer2/util/ParsableByteArray;->readUtf8EncodedLong()J
               Lcom/google/android/exoplayer2/util/Util;->getPcmEncoding(I)I
               Lcom/google/android/exoplayer2/util/Util;->isEncodingHighResolutionIntegerPcm(I)Z
               Lcom/google/android/exoplayer2/util/Util;->isEncodingLinearPcm(I)Z
               Lcom/google/android/exoplayer2/video/MediaCodecVideoRenderer;->configureTunnelingV21(Landroid/media/MediaFormat; I)V
               Lcom/google/android/exoplayer2/video/MediaCodecVideoRenderer;->configureCodec(Lcom/google/android/exoplayer2/mediacodec/Media
                    CodecInfo; Landroid/media/MediaCodec; Lcom/google/android/exoplayer2/Format; Landroid/media/MediaCrypto; F)V
               Lcom/google/android/exoplayer2/video/VideoRendererEventListener$EventDispatcher;->decoderInitialized(Ljava/lang/String; J J)V
               Lcom/google/android/gms/common/api/GoogleApi;->createClientSettingsBuilder()Lcom/google/android/gms/common/internal/ClientSet
                    tings$Builder;
               Lcom/google/android/gms/common/api/GoogleApiClient$Builder;->buildClientSettings()Lcom/google/android/gms/common/internal/Cli
                    entSettings;
               Lcom/google/android/gms/common/internal/ClientSettings;->getOptionalApiSettings()Ljava/util/Map;
               Lcom/google/android/gms/common/internal/GmsIntents;->createSettingsIntent(Ljava/lang/String;)Landroid/content/Intent;
               Lcom/google/android/gms/maps/GoogleMap;->getUiSettings()Lcom/google/android/gms/maps/UiSettings;
               Lcom/google/android/gms/maps/internal/IGoogleMapDelegate;->getUiSettings()Lcom/google/android/gms/maps/internal/IUiSettingsDe
                    legate;
               Lcom/google/android/gms/maps/internal/zzg;->getUiSettings()Lcom/google/android/gms/maps/internal/IUiSettingsDelegate;
               Lcom/google/android/gms/signin/internal/SignInClientImpl;->createBundleFromClientSettings(Lcom/google/android/gms/common/inte
                    rnal/ClientSettings;)Landroid/os/Bundle;
               Lcom/google/firebase/remoteconfig/FirebaseRemoteConfig;->setConfigSettings(Lcom/google/firebase/remoteconfig/FirebaseRemoteCo
                    nfigSettings;)V
               Lcom/googlecode/mp4parser/authoring/tracks/CencEncryptedTrack;->getSampleEncryptionEntries()Ljava/util/List;
               Lcom/googlecode/mp4parser/authoring/tracks/CencEncryptedTrack;->hasSubSampleEncryption()Z
               Lcom/googlecode/mp4parser/authoring/CencMp4TrackImplImpl;->getSampleEncryptionEntries()Ljava/util/List;
               Lcom/googlecode/mp4parser/authoring/CencMp4TrackImplImpl;->hasSubSampleEncryption()Z
               Lcom/googlecode/mp4parser/authoring/tracks/CencEncryptingTrackImpl;->getSampleEncryptionEntries()Ljava/util/List;
               Lcom/googlecode/mp4parser/authoring/tracks/CencEncryptingTrackImpl;->hasSubSampleEncryption()Z
               Lcom/googlecode/mp4parser/authoring/tracks/CroppedTrack;->getDecodingTimeEntries(Ljava/util/List; J J)Ljava/util/List;
               Lcom/googlecode/mp4parser/authoring/tracks/H264TrackImpl;->configureFramerate()V
               Lcom/googlecode/mp4parser/boxes/AbstractSampleEncryptionBox;->isOverrideTrackEncryptionBoxParameters()Z
               Lcom/googlecode/mp4parser/boxes/AbstractSampleEncryptionBox;->isSubSampleEncryption()Z
               Lcom/googlecode/mp4parser/boxes/AbstractSampleEncryptionBox;->setSubSampleEncryption(Z)V
               Lcom/googlecode/mp4parser/boxes/DTSSpecificBox;->getDashAudioChannelConfiguration()[I
               Lcom/googlecode/mp4parser/boxes/basemediaformat/AvcNalUnitStorageBox;->getAvcDecoderConfigurationRecord()Lcom/mp4parser/iso14
                    496/part15/AvcDecoderConfigurationRecord;
               Lcom/googlecode/mp4parser/boxes/mp4/objectdescriptors/AudioSpecificConfig;->gaSpecificConfigSize()I
               Lcom/googlecode/mp4parser/boxes/mp4/objectdescriptors/AudioSpecificConfig;->parseErHvxcConfig(I I I
                    Lcom/googlecode/mp4parser/boxes/mp4/objectdescriptors/BitReaderBuffer;)V
               Lcom/googlecode/mp4parser/boxes/mp4/objectdescriptors/AudioSpecificConfig;->parseGaSpecificConfig(I I I
                    Lcom/googlecode/mp4parser/boxes/mp4/objectdescriptors/BitReaderBuffer;)V
               Lcom/googlecode/mp4parser/boxes/mp4/objectdescriptors/AudioSpecificConfig;->parseHilnConfig(I I I
                    Lcom/googlecode/mp4parser/boxes/mp4/objectdescriptors/BitReaderBuffer;)V
               Lcom/googlecode/mp4parser/boxes/mp4/objectdescriptors/AudioSpecificConfig;->parseHilnEnexConfig(I I I
                    Lcom/googlecode/mp4parser/boxes/mp4/objectdescriptors/BitReaderBuffer;)V
               Lcom/googlecode/mp4parser/boxes/mp4/objectdescriptors/AudioSpecificConfig;->parseParaConfig(I I I
                    Lcom/googlecode/mp4parser/boxes/mp4/objectdescriptors/BitReaderBuffer;)V
               Lcom/googlecode/mp4parser/boxes/mp4/objectdescriptors/AudioSpecificConfig;->parseParametricSpecificConfig(I I I
                    Lcom/googlecode/mp4parser/boxes/mp4/objectdescriptors/BitReaderBuffer;)V
               Lcom/googlecode/mp4parser/boxes/mp4/objectdescriptors/AudioSpecificConfig;->getChannelConfiguration()I
               Lcom/googlecode/mp4parser/boxes/mp4/objectdescriptors/AudioSpecificConfig;->getConfigBytes()[B
               Lcom/googlecode/mp4parser/boxes/mp4/objectdescriptors/AudioSpecificConfig;->setChannelConfiguration(I)V
               Lcom/googlecode/mp4parser/boxes/mp4/objectdescriptors/DecoderConfigDescriptor;->getDecoderSpecificInfo()Lcom/googlecode/mp4pa
                    rser/boxes/mp4/objectdescriptors/DecoderSpecificInfo;
               Lcom/googlecode/mp4parser/boxes/mp4/objectdescriptors/ESDescriptor;->getDecoderConfigDescriptor()Lcom/googlecode/mp4parser/bo
                    xes/mp4/objectdescriptors/DecoderConfigDescriptor;
               Lcom/googlecode/mp4parser/boxes/mp4/objectdescriptors/ESDescriptor;->getSlConfigDescriptor()Lcom/googlecode/mp4parser/boxes/m
                    p4/objectdescriptors/SLConfigDescriptor;
               Lcom/googlecode/mp4parser/boxes/mp4/objectdescriptors/ESDescriptor;->setDecoderConfigDescriptor(Lcom/googlecode/mp4parser/box
                    es/mp4/objectdescriptors/DecoderConfigDescriptor;)V
               Lcom/googlecode/mp4parser/boxes/mp4/objectdescriptors/ESDescriptor;->setSlConfigDescriptor(Lcom/googlecode/mp4parser/boxes/mp
                    4/objectdescriptors/SLConfigDescriptor;)V
               Lcom/googlecode/mp4parser/boxes/mp4/samplegrouping/CencSampleEncryptionInformationGroupEntry;->isEncrypted()Z
               Lcom/googlecode/mp4parser/boxes/mp4/samplegrouping/CencSampleEncryptionInformationGroupEntry;->setEncrypted(Z)V
               Lcom/googlecode/mp4parser/boxes/mp4/samplegrouping/TemporalLevelEntry;->isLevelIndependentlyDecodable()Z
               Lcom/googlecode/mp4parser/boxes/mp4/samplegrouping/TemporalLevelEntry;->setLevelIndependentlyDecodable(Z)V
               Lcom/googlecode/mp4parser/boxes/piff/PiffSampleEncryptionBox;->isOverrideTrackEncryptionBoxParameters()Z
               Lcom/googlecode/mp4parser/boxes/piff/PiffSampleEncryptionBox;->setOverrideTrackEncryptionBoxParameters(Z)V
               Lcom/mp4parser/iso14496/part15/AvcConfigurationBox;->getavcDecoderConfigurationRecord()Lcom/mp4parser/iso14496/part15/AvcDeco
                    derConfigurationRecord;
               Lcom/mp4parser/iso14496/part15/AvcConfigurationBox;->setConfigurationVersion(I)V
               Lcom/mp4parser/iso23001/part7/CencSampleAuxiliaryDataFormat$Pair;->encrypted()J
               Lcom/mp4parser/iso23001/part7/CencSampleAuxiliaryDataFormat$ByteBytePair;->encrypted()J
               Lcom/mp4parser/iso23001/part7/CencSampleAuxiliaryDataFormat$ByteIntPair;->encrypted()J
               Lcom/mp4parser/iso23001/part7/CencSampleAuxiliaryDataFormat$ByteLongPair;->encrypted()J
               Lcom/mp4parser/iso23001/part7/CencSampleAuxiliaryDataFormat$ByteShortPair;->encrypted()J
               Lcom/mp4parser/iso23001/part7/CencSampleAuxiliaryDataFormat$IntBytePair;->encrypted()J
               Lcom/mp4parser/iso23001/part7/CencSampleAuxiliaryDataFormat$IntIntPair;->encrypted()J
               Lcom/mp4parser/iso23001/part7/CencSampleAuxiliaryDataFormat$IntLongPair;->encrypted()J
               Lcom/mp4parser/iso23001/part7/CencSampleAuxiliaryDataFormat$IntShortPair;->encrypted()J
               Lcom/mp4parser/iso23001/part7/CencSampleAuxiliaryDataFormat$ShortBytePair;->encrypted()J
               Lcom/mp4parser/iso23001/part7/CencSampleAuxiliaryDataFormat$ShortIntPair;->encrypted()J
               Lcom/mp4parser/iso23001/part7/CencSampleAuxiliaryDataFormat$ShortLongPair;->encrypted()J
               Lcom/mp4parser/iso23001/part7/CencSampleAuxiliaryDataFormat$ShortShortPair;->encrypted()J
               Lcom/stripe/android/net/StripeApiHandler;->urlEncode(Ljava/lang/String;)Ljava/lang/String;
               Lcom/stripe/android/net/StripeApiHandler;->urlEncodePair(Ljava/lang/String; Ljava/lang/String;)Ljava/lang/String;
               Lnet/hockeyapp/android/FeedbackActivity;->configureAppropriateView()V
               Lnet/hockeyapp/android/FeedbackActivity;->configureHints()V
               Lnet/hockeyapp/android/FeedbackActivity;->configureFeedbackView(Z)V
               Lnet/hockeyapp/android/FeedbackActivity;->onRetainNonConfigurationInstance()Ljava/lang/Object;
               Lnet/hockeyapp/android/LoginActivity;->configureView()V
               Lnet/hockeyapp/android/LoginActivity;->md5(Ljava/lang/String;)Ljava/lang/String;
               Lnet/hockeyapp/android/LoginActivity;->onRetainNonConfigurationInstance()Ljava/lang/Object;
               Lnet/hockeyapp/android/tasks/CheckUpdateTask;->encodeParam(Ljava/lang/String;)Ljava/lang/String;
               Lnet/hockeyapp/android/utils/Base64;->encode([B I)[B
               Lnet/hockeyapp/android/utils/Base64;->encode([B I I I)[B
               Lnet/hockeyapp/android/utils/Base64;->encodeToString([B I)Ljava/lang/String;
               Lnet/hockeyapp/android/utils/ImageUtils;->decodeSampledBitmap(Landroid/content/Context; Landroid/net/Uri; I
                    I)Landroid/graphics/Bitmap;
               Lnet/hockeyapp/android/utils/ImageUtils;->decodeSampledBitmap(Ljava/io/File; I I)Landroid/graphics/Bitmap;
               Lnet/hockeyapp/android/utils/Util;->encodeParam(Ljava/lang/String;)Ljava/lang/String;
               Lnet/hockeyapp/android/views/AttachmentView;->configureViewForPlaceholder(Z)V
               Lnet/hockeyapp/android/views/AttachmentView;->configureViewForThumbnail(Landroid/graphics/Bitmap; Z)V
               Lorg/telegram/messenger/AndroidUtilities;->decodeQuotedPrintable([B)[B
               Lorg/telegram/messenger/ContactsController;->loadPrivacySettings()V
               Lorg/telegram/messenger/DownloadController;->checkAutodownloadSettings()V
               Lorg/telegram/messenger/FileLoadOperation;->setEncryptFile(Z)V
               Lorg/telegram/messenger/GcmPushListenerService;->onDecryptError()V
               Lorg/telegram/messenger/ImageReceiver;->setAllowDecodeSingleFrame(Z)V
               Lorg/telegram/messenger/MessageObject;->shouldEncryptPhotoOrVideo(Lorg/telegram/tgnet/TLRPC$Message;)Z
               Lorg/telegram/messenger/MessageObject;->shouldEncryptPhotoOrVideo()Z
               Lorg/telegram/messenger/MessagesController;->applyDialogNotificationsSettings(J
                    Lorg/telegram/tgnet/TLRPC$PeerNotifySettings;)V
               Lorg/telegram/messenger/MessagesController;->applyDialogsNotificationsSettings(Ljava/util/ArrayList;)V
               Lorg/telegram/messenger/MessagesController;->getEmojiSettings(I)Landroid/content/SharedPreferences;
               Lorg/telegram/messenger/MessagesController;->getGlobalEmojiSettings()Landroid/content/SharedPreferences;
               Lorg/telegram/messenger/MessagesController;->getGlobalMainSettings()Landroid/content/SharedPreferences;
               Lorg/telegram/messenger/MessagesController;->getGlobalNotificationsSettings()Landroid/content/SharedPreferences;
               Lorg/telegram/messenger/MessagesController;->getMainSettings(I)Landroid/content/SharedPreferences;
               Lorg/telegram/messenger/MessagesController;->getNotificationsSettings(I)Landroid/content/SharedPreferences;
               Lorg/telegram/messenger/MessagesController;->getEncryptedChat(Ljava/lang/Integer;)Lorg/telegram/tgnet/TLRPC$EncryptedChat;
               Lorg/telegram/messenger/MessagesController;->getEncryptedChatDB(I Z)Lorg/telegram/tgnet/TLRPC$EncryptedChat;
               Lorg/telegram/messenger/MessagesController;->lambda$loadGlobalNotificationsSettings$97$MessagesController(I
                    Lorg/telegram/tgnet/TLObject; Lorg/telegram/tgnet/TLRPC$TL_error;)V
               Lorg/telegram/messenger/MessagesController;->lambda$loadPeerSettings$25$MessagesController(J Lorg/telegram/tgnet/TLObject;
                    Lorg/telegram/tgnet/TLRPC$TL_error;)V
               Lorg/telegram/messenger/MessagesController;->lambda$loadPeerSettings$27$MessagesController(J Lorg/telegram/tgnet/TLObject;
                    Lorg/telegram/tgnet/TLRPC$TL_error;)V
               Lorg/telegram/messenger/MessagesController;->lambda$updateConfig$2$MessagesController(Lorg/telegram/tgnet/TLRPC$TL_config;)V
               Lorg/telegram/messenger/MessagesController;->loadGlobalNotificationsSettings()V
               Lorg/telegram/messenger/MessagesController;->loadPeerSettings(Lorg/telegram/tgnet/TLRPC$User;
                    Lorg/telegram/tgnet/TLRPC$Chat;)V
               Lorg/telegram/messenger/MessagesController;->putEncryptedChat(Lorg/telegram/tgnet/TLRPC$EncryptedChat; Z)V
               Lorg/telegram/messenger/MessagesController;->putEncryptedChats(Ljava/util/ArrayList; Z)V
               Lorg/telegram/messenger/MessagesController;->updateConfig(Lorg/telegram/tgnet/TLRPC$TL_config;)V
               Lorg/telegram/messenger/MessagesStorage;->fixNotificationSettings()V
               Lorg/telegram/messenger/MessagesStorage;->getEncryptedChat(I)Lorg/telegram/tgnet/TLRPC$EncryptedChat;
               Lorg/telegram/messenger/MessagesStorage;->getEncryptedChat(I Ljava/util/concurrent/CountDownLatch; Ljava/util/ArrayList;)V
               Lorg/telegram/messenger/MessagesStorage;->getEncryptedChatsInternal(Ljava/lang/String; Ljava/util/ArrayList;
                    Ljava/util/ArrayList;)V
               Lorg/telegram/messenger/MessagesStorage;->lambda$fixNotificationSettings$5$MessagesStorage()V
               Lorg/telegram/messenger/MessagesStorage;->lambda$getEncryptedChat$92$MessagesStorage(I Ljava/util/ArrayList;
                    Ljava/util/concurrent/CountDownLatch;)V
               Lorg/telegram/messenger/MessagesStorage;->lambda$putEncryptedChat$93$MessagesStorage(Lorg/telegram/tgnet/TLRPC$EncryptedChat;
                    Lorg/telegram/tgnet/TLRPC$User; Lorg/telegram/tgnet/TLRPC$TL_dialog;)V
               Lorg/telegram/messenger/MessagesStorage;->lambda$updateEncryptedChat$89$MessagesStorage(Lorg/telegram/tgnet/TLRPC$EncryptedCh
                    at;)V
               Lorg/telegram/messenger/MessagesStorage;->lambda$updateEncryptedChatLayer$88$MessagesStorage(Lorg/telegram/tgnet/TLRPC$Encryp
                    tedChat;)V
               Lorg/telegram/messenger/MessagesStorage;->lambda$updateEncryptedChatSeq$86$MessagesStorage(Lorg/telegram/tgnet/TLRPC$Encrypte
                    dChat; Z)V
               Lorg/telegram/messenger/MessagesStorage;->lambda$updateEncryptedChatTTL$87$MessagesStorage(Lorg/telegram/tgnet/TLRPC$Encrypte
                    dChat;)V
               Lorg/telegram/messenger/MessagesStorage;->putEncryptedChat(Lorg/telegram/tgnet/TLRPC$EncryptedChat;
                    Lorg/telegram/tgnet/TLRPC$User; Lorg/telegram/tgnet/TLRPC$TL_dialog;)V
               Lorg/telegram/messenger/MessagesStorage;->updateEncryptedChat(Lorg/telegram/tgnet/TLRPC$EncryptedChat;)V
               Lorg/telegram/messenger/MessagesStorage;->updateEncryptedChatLayer(Lorg/telegram/tgnet/TLRPC$EncryptedChat;)V
               Lorg/telegram/messenger/MessagesStorage;->updateEncryptedChatSeq(Lorg/telegram/tgnet/TLRPC$EncryptedChat; Z)V
               Lorg/telegram/messenger/MessagesStorage;->updateEncryptedChatTTL(Lorg/telegram/tgnet/TLRPC$EncryptedChat;)V
               Lorg/telegram/messenger/NotificationsController$$Lambda$15;->onHeaderDecoded(Landroid/graphics/ImageDecoder;
                    Landroid/graphics/ImageDecoder$ImageInfo; Landroid/graphics/ImageDecoder$Source;)V
               Lorg/telegram/messenger/NotificationsController;->lambda$updateServerNotificationsSettings$31$NotificationsController(Lorg/te
                    legram/tgnet/TLObject; Lorg/telegram/tgnet/TLRPC$TL_error;)V
               Lorg/telegram/messenger/NotificationsController;->updateServerNotificationsSettings(J)V
               Lorg/telegram/messenger/SecretChatHelper;->decryptWithMtProtoVersion(Lorg/telegram/tgnet/NativeByteBuffer; [B [B I Z Z)Z
               Lorg/telegram/messenger/SecretChatHelper;->decryptMessage(Lorg/telegram/tgnet/TLRPC$EncryptedMessage;)Ljava/util/ArrayList;
               Lorg/telegram/messenger/SecretChatHelper;->lambda$decryptMessage$16$SecretChatHelper(Lorg/telegram/tgnet/TLRPC$TL_encryptedCh
                    atDiscarded;)V
               Lorg/telegram/messenger/SecretChatHelper;->lambda$performSendEncryptedRequest$7$SecretChatHelper(Lorg/telegram/tgnet/TLRPC$En
                    cryptedChat; Lorg/telegram/tgnet/TLRPC$DecryptedMessage; Lorg/telegram/tgnet/TLRPC$Message;
                    Lorg/telegram/tgnet/TLRPC$InputEncryptedFile; Lorg/telegram/messenger/MessageObject; Ljava/lang/String;)V
               Lorg/telegram/messenger/SecretChatHelper;->lambda$processDecryptedObject$11$SecretChatHelper(J)V
               Lorg/telegram/messenger/SecretChatHelper;->lambda$processUpdateEncryption$1$SecretChatHelper(Lorg/telegram/tgnet/TLRPC$TL_dia
                    log;)V
               Lorg/telegram/messenger/SecretChatHelper;->lambda$processUpdateEncryption$2$SecretChatHelper(Lorg/telegram/tgnet/TLRPC$Encryp
                    tedChat; Lorg/telegram/tgnet/TLRPC$EncryptedChat;)V
               Lorg/telegram/messenger/SecretChatHelper;->performSendEncryptedRequest(Lorg/telegram/tgnet/TLRPC$DecryptedMessage;
                    Lorg/telegram/tgnet/TLRPC$Message; Lorg/telegram/tgnet/TLRPC$EncryptedChat;
                    Lorg/telegram/tgnet/TLRPC$InputEncryptedFile; Ljava/lang/String; Lorg/telegram/messenger/MessageObject;)V
               Lorg/telegram/messenger/SecretChatHelper;->performSendEncryptedRequest(Lorg/telegram/tgnet/TLRPC$TL_messages_sendEncryptedMul
                    tiMedia; Lorg/telegram/messenger/SendMessagesHelper$DelayedMessage;)V
               Lorg/telegram/messenger/SecretChatHelper;->processDecryptedObject(Lorg/telegram/tgnet/TLRPC$EncryptedChat;
                    Lorg/telegram/tgnet/TLRPC$EncryptedFile; I Lorg/telegram/tgnet/TLObject; Z)Lorg/telegram/tgnet/TLRPC$Message;
               Lorg/telegram/messenger/SecretChatHelper;->processUpdateEncryption(Lorg/telegram/tgnet/TLRPC$TL_updateEncryption;
                    Ljava/util/concurrent/ConcurrentHashMap;)V
               Lorg/telegram/messenger/SendMessagesHelper;->createCompressionSettings(Ljava/lang/String;)Lorg/telegram/messenger/VideoEdited
                    Info;
               Lorg/telegram/messenger/SharedConfig;->clearConfig()V
               Lorg/telegram/messenger/SharedConfig;->isPassportConfigLoaded()Z
               Lorg/telegram/messenger/SharedConfig;->loadConfig()V
               Lorg/telegram/messenger/SharedConfig;->saveConfig()V
               Lorg/telegram/messenger/SharedConfig;->setPassportConfig(Ljava/lang/String; I)V
               Lorg/telegram/messenger/UserConfig;->clearConfig()V
               Lorg/telegram/messenger/UserConfig;->loadConfig()V
               Lorg/telegram/messenger/UserConfig;->saveConfig(Z)V
               Lorg/telegram/messenger/UserConfig;->saveConfig(Z Ljava/io/File;)V
               Lorg/telegram/messenger/Utilities;->MD5(Ljava/lang/String;)Ljava/lang/String;
               Lorg/telegram/messenger/Utilities;->aesCbcEncryption(Ljava/nio/ByteBuffer; [B [B I I I)V
               Lorg/telegram/messenger/Utilities;->aesCbcEncryptionByteArray([B [B [B I I I I)V
               Lorg/telegram/messenger/Utilities;->aesCbcEncryptionByteArraySafe([B [B [B I I I I)V
               Lorg/telegram/messenger/Utilities;->aesCtrDecryption(Ljava/nio/ByteBuffer; [B [B I I)V
               Lorg/telegram/messenger/Utilities;->aesCtrDecryptionByteArray([B [B [B I I I)V
               Lorg/telegram/messenger/Utilities;->aesIgeEncryption(Ljava/nio/ByteBuffer; [B [B Z I I)V
               Lorg/telegram/messenger/Utilities;->aesIgeEncryption(Ljava/nio/ByteBuffer; [B [B Z Z I I)V
               Lorg/telegram/messenger/Utilities;->computeSHA1(Ljava/nio/ByteBuffer;)[B
               Lorg/telegram/messenger/Utilities;->computeSHA1(Ljava/nio/ByteBuffer; I I)[B
               Lorg/telegram/messenger/Utilities;->computeSHA1([B)[B
               Lorg/telegram/messenger/Utilities;->computeSHA1([B I I)[B
               Lorg/telegram/messenger/Utilities;->computeSHA256([B)[B
               Lorg/telegram/messenger/Utilities;->computeSHA256([B I I)[B
               Lorg/telegram/messenger/Utilities;->computeSHA256([B I I Ljava/nio/ByteBuffer; I I)[B
               Lorg/telegram/messenger/Utilities;->computeSHA256([[B)[B
               Lorg/telegram/messenger/Utilities;->computeSHA512([B)[B
               Lorg/telegram/messenger/Utilities;->computeSHA512([B [B)[B
               Lorg/telegram/messenger/Utilities;->computeSHA512([B [B [B)[B
               Lorg/telegram/messenger/audioinfo/mp3/ID3v2FrameBody;->readEncoding()Lorg/telegram/messenger/audioinfo/mp3/ID3v2Encoding;
               Lorg/telegram/messenger/audioinfo/mp3/ID3v2FrameHeader;->isEncryption()Z
               Lorg/telegram/messenger/camera/CameraSession;->configurePhotoCamera()V
               Lorg/telegram/messenger/camera/CameraSession;->configureRecorder(I Landroid/media/MediaRecorder;)V
               Lorg/telegram/messenger/camera/CameraSession;->configureRoundCamera()V
               Lorg/telegram/messenger/secretmedia/EncryptedFileInputStream;->decryptBytesWithKeyFile([B I I Ljava/io/File;)V
               Lorg/telegram/messenger/secretmedia/EncryptedFileInputStream;->decryptBytesWithKeyFile([B I I
                    Lorg/telegram/messenger/SecureDocumentKey;)V
               Lorg/telegram/messenger/voip/VoIPBaseService$StateListener;->onAudioSettingsChanged()V
               Lorg/telegram/messenger/voip/VoIPBaseService;->configureDeviceForCall()V
               Lorg/telegram/messenger/voip/VoIPBaseService;->updateServerConfig()V
               Lorg/telegram/messenger/voip/VoIPController;->nativeSetConfig(J D D I Z Z Z Ljava/lang/String; Ljava/lang/String;)V
               Lorg/telegram/messenger/voip/VoIPController;->nativeSetEncryptionKey(J [B Z)V
               Lorg/telegram/messenger/voip/VoIPController;->setConfig(D D I J)V
               Lorg/telegram/messenger/voip/VoIPController;->setEncryptionKey([B Z)V
               Lorg/telegram/messenger/voip/VoIPServerConfig;->nativeSetConfig([Ljava/lang/String; [Ljava/lang/String;)V
               Lorg/telegram/messenger/voip/VoIPServerConfig;->setConfig(Ljava/lang/String;)V
               Lorg/telegram/messenger/voip/VoIPService;->initiateActualEncryptedCall()V
               Lorg/telegram/messenger/voip/VoIPService;->getEncryptionKey()[B
               Lorg/telegram/messenger/voip/VoIPService;->updateServerConfig()V
               Lorg/telegram/tgnet/ConnectionsManager;->native_applyDnsConfig(I J Ljava/lang/String;)V
               Lorg/telegram/tgnet/ConnectionsManager;->native_setProxySettings(I Ljava/lang/String; I Ljava/lang/String; Ljava/lang/String;
                    Ljava/lang/String;)V
               Lorg/telegram/tgnet/ConnectionsManager;->native_updateDcSettings(I)V
               Lorg/telegram/tgnet/ConnectionsManager;->onUpdateConfig(J I)V
               Lorg/telegram/tgnet/ConnectionsManager;->setProxySettings(Z Ljava/lang/String; I Ljava/lang/String; Ljava/lang/String;
                    Ljava/lang/String;)V
               Lorg/telegram/tgnet/ConnectionsManager;->updateDcSettings()V
               Lorg/telegram/ui/ActionBar/Theme;->saveAutoNightThemeConfig()V
               Lorg/telegram/ui/ChatActivity;->getCurrentEncryptedChat()Lorg/telegram/tgnet/TLRPC$EncryptedChat;
               Lorg/telegram/ui/Components/AnimatedFileDrawable;->createDecoder(Ljava/lang/String; [I)J
               Lorg/telegram/ui/Components/AnimatedFileDrawable;->destroyDecoder(J)V
               Lorg/telegram/ui/Components/AnimatedFileDrawable;->setAllowDecodeSingleFrame(Z)V
               Lorg/telegram/ui/Components/EmojiView$Listener;->onStickersSettingsClick()V
               Lorg/telegram/ui/Components/ChatActivityEnterView$24;->onStickersSettingsClick()V
               Lorg/telegram/ui/Components/CombinedDrawable;->getConstantState()Landroid/graphics/drawable/Drawable$ConstantState;
               Lorg/telegram/ui/Components/IdenticonDrawable;->setEncryptedChat(Lorg/telegram/tgnet/TLRPC$EncryptedChat;)V
               Lorg/telegram/ui/Components/InstantCameraView$VideoRecorder;->prepareEncoder()V
               Lorg/telegram/ui/Components/InstantCameraView$VideoRecorder;->drainEncoder(Z)V
               Lorg/telegram/ui/Components/Paint/Views/ColorPicker$ColorPickerDelegate;->onSettingsPressed()V
               Lorg/telegram/ui/Components/Paint/Views/ColorPicker;->getSettingsButton()Landroid/view/View;
               Lorg/telegram/ui/Components/Paint/Views/ColorPicker;->setSettingsButtonImage(I)V
               Lorg/telegram/ui/Components/PhotoPaintView$6;->onSettingsPressed()V
               Lorg/telegram/ui/Components/PhotoPaintView;->showBrushSettings()V
               Lorg/telegram/ui/Components/PhotoPaintView;->showTextSettings()V
               Lorg/telegram/ui/Components/PhotoPaintView;->updateSettingsButton()V
               Lorg/telegram/ui/Components/PhotoViewerCaptionEnterView$9;->onStickersSettingsClick()V
               Lorg/telegram/ui/Components/WebPlayerView$CoubVideoTask;->decodeUrl(Ljava/lang/String;)Ljava/lang/String;
               Lorg/telegram/ui/Components/voip/VoIPHelper;->showCallDebugSettings(Landroid/content/Context;)V
               Lorg/telegram/ui/Components/voip/VoIPHelper;->upgradeP2pSetting(I)V
               Lorg/telegram/ui/NotificationsSettingsActivity;->lambda$updateServerNotificationsSettings$11$NotificationsSettingsActivity(Lo
                    rg/telegram/tgnet/TLObject; Lorg/telegram/tgnet/TLRPC$TL_error;)V
               Lorg/telegram/ui/NotificationsSettingsActivity;->lambda$createView$10$NotificationsSettingsActivity(Landroid/view/View; I)V
               Lorg/telegram/ui/NotificationsSettingsActivity;->lambda$null$0$NotificationsSettingsActivity(Ljava/util/ArrayList;
                    Ljava/util/ArrayList; Ljava/util/ArrayList; Ljava/util/ArrayList; Ljava/util/ArrayList;)V
               Lorg/telegram/ui/NotificationsSettingsActivity;->lambda$null$2$NotificationsSettingsActivity()V
               Lorg/telegram/ui/NotificationsSettingsActivity;->lambda$null$3$NotificationsSettingsActivity(Lorg/telegram/tgnet/TLObject;
                    Lorg/telegram/tgnet/TLRPC$TL_error;)V
               Lorg/telegram/ui/NotificationsSettingsActivity;->lambda$null$4$NotificationsSettingsActivity(Landroid/content/DialogInterface
                    ; I)V
               Lorg/telegram/ui/NotificationsSettingsActivity;->lambda$null$5$NotificationsSettingsActivity(I)V
               Lorg/telegram/ui/NotificationsSettingsActivity;->lambda$null$6$NotificationsSettingsActivity(I)V
               Lorg/telegram/ui/NotificationsSettingsActivity;->lambda$null$7$NotificationsSettingsActivity(I)V
               Lorg/telegram/ui/NotificationsSettingsActivity;->lambda$null$8$NotificationsSettingsActivity(I)V
               Lorg/telegram/ui/NotificationsSettingsActivity;->lambda$null$9$NotificationsSettingsActivity(I
                    Landroid/content/DialogInterface; I)V
               Lorg/telegram/ui/NotificationsSettingsActivity;->lambda$onFragmentCreate$1$NotificationsSettingsActivity()V
               Lorg/telegram/ui/NotificationsSettingsActivity;->updateServerNotificationsSettings(Z)V
               Lorg/telegram/ui/PassportActivity;->decryptData([B [B [B)Ljava/lang/String;
               Lorg/telegram/ui/PassportActivity;->decryptSecret([B [B)[B
               Lorg/telegram/ui/PassportActivity;->decryptValueSecret([B [B)[B
               Lorg/telegram/ui/PassportActivity;->encryptData([B)Lorg/telegram/ui/PassportActivity$EncryptionResult;
               Lorg/telegram/ui/PrivacyControlActivity;->applyCurrentPrivacySettings()V
               Lorg/telegram/ui/PrivacyControlActivity;->lambda$applyCurrentPrivacySettings$4$PrivacyControlActivity(Lorg/telegram/ui/Action
                    Bar/AlertDialog; Lorg/telegram/tgnet/TLObject; Lorg/telegram/tgnet/TLRPC$TL_error;)V
               Lorg/telegram/ui/PrivacySettingsActivity;->lambda$null$15$PrivacySettingsActivity(Lorg/telegram/tgnet/TLObject;
                    Lorg/telegram/tgnet/TLRPC$TL_error;)V
               Lorg/telegram/ui/PrivacySettingsActivity;->lambda$onFragmentDestroy$0$PrivacySettingsActivity(Lorg/telegram/tgnet/TLObject;
                    Lorg/telegram/tgnet/TLRPC$TL_error;)V
               Lorg/telegram/ui/PrivacySettingsActivity;->loadPasswordSettings()V
               Lorg/telegram/ui/PrivacySettingsActivity;->lambda$createView$18$PrivacySettingsActivity(Landroid/view/View; I)V
               Lorg/telegram/ui/PrivacySettingsActivity;->lambda$loadPasswordSettings$20$PrivacySettingsActivity(Lorg/telegram/tgnet/TLObjec
                    t; Lorg/telegram/tgnet/TLRPC$TL_error;)V
               Lorg/telegram/ui/PrivacySettingsActivity;->lambda$null$1$PrivacySettingsActivity()V
               Lorg/telegram/ui/PrivacySettingsActivity;->lambda$null$10$PrivacySettingsActivity(Lorg/telegram/ui/Cells/TextCheckCell;
                    Lorg/telegram/tgnet/TLObject; Lorg/telegram/tgnet/TLRPC$TL_error;)V
               Lorg/telegram/ui/PrivacySettingsActivity;->lambda$null$11$PrivacySettingsActivity(Lorg/telegram/ui/Cells/TextCheckCell;
                    Landroid/content/DialogInterface; I)V
               Lorg/telegram/ui/PrivacySettingsActivity;->lambda$null$12$PrivacySettingsActivity(Landroid/content/DialogInterface; I)V
               Lorg/telegram/ui/PrivacySettingsActivity;->lambda$null$13$PrivacySettingsActivity()V
               Lorg/telegram/ui/PrivacySettingsActivity;->lambda$null$14$PrivacySettingsActivity(Landroid/view/View;)V
               Lorg/telegram/ui/PrivacySettingsActivity;->lambda$null$16$PrivacySettingsActivity(Landroid/content/DialogInterface; I)V
               Lorg/telegram/ui/PrivacySettingsActivity;->lambda$null$17$PrivacySettingsActivity(Landroid/view/View;)V
               Lorg/telegram/ui/PrivacySettingsActivity;->lambda$null$19$PrivacySettingsActivity()V
               Lorg/telegram/ui/PrivacySettingsActivity;->lambda$null$2$PrivacySettingsActivity(Lorg/telegram/tgnet/TLObject;
                    Lorg/telegram/tgnet/TLRPC$TL_error;)V
               Lorg/telegram/ui/PrivacySettingsActivity;->lambda$null$3$PrivacySettingsActivity(Landroid/content/DialogInterface; I)V
               Lorg/telegram/ui/PrivacySettingsActivity;->lambda$null$4$PrivacySettingsActivity(Lorg/telegram/ui/ActionBar/AlertDialog;
                    Lorg/telegram/tgnet/TLObject; Lorg/telegram/tgnet/TLRPC$TL_account_setAccountTTL;)V
               Lorg/telegram/ui/PrivacySettingsActivity;->lambda$null$5$PrivacySettingsActivity(Lorg/telegram/ui/ActionBar/AlertDialog;
                    Lorg/telegram/tgnet/TLRPC$TL_account_setAccountTTL; Lorg/telegram/tgnet/TLObject; Lorg/telegram/tgnet/TLRPC$TL_error;)V
               Lorg/telegram/ui/PrivacySettingsActivity;->lambda$null$6$PrivacySettingsActivity(Landroid/content/DialogInterface; I)V
               Lorg/telegram/ui/PrivacySettingsActivity;->lambda$null$7$PrivacySettingsActivity()V
               Lorg/telegram/ui/PrivacySettingsActivity;->lambda$null$8$PrivacySettingsActivity(Landroid/content/DialogInterface; I)V
               Lorg/telegram/ui/PrivacySettingsActivity;->lambda$null$9$PrivacySettingsActivity(Lorg/telegram/ui/Cells/TextCheckCell;)V
               Lorg/telegram/ui/SettingsActivity$2;->lambda$onItemClick$0$SettingsActivity$2(Landroid/content/DialogInterface; I)V
               Lorg/telegram/ui/SettingsActivity$5;->lambda$onItemClick$4$SettingsActivity$5([Z Landroid/view/View;)V
               Lorg/telegram/ui/SettingsActivity$5;->lambda$onItemClick$0$SettingsActivity$5(Lorg/telegram/ui/Components/NumberPicker; I
                    Landroid/content/DialogInterface; I)V
               Lorg/telegram/ui/SettingsActivity$5;->lambda$onItemClick$1$SettingsActivity$5(Landroid/content/DialogInterface; I)V
               Lorg/telegram/ui/SettingsActivity$5;->lambda$onItemClick$2$SettingsActivity$5(Landroid/content/DialogInterface; I)V
               Lorg/telegram/ui/SettingsActivity$5;->lambda$onItemClick$3$SettingsActivity$5(I Landroid/content/DialogInterface; I)V
               Lorg/telegram/ui/SettingsActivity$5;->lambda$onItemClick$5$SettingsActivity$5([Z I Landroid/view/View;)V
               Lorg/telegram/ui/SettingsActivity$6;->lambda$onItemClick$0$SettingsActivity$6(Landroid/content/DialogInterface; I)V
               Lorg/telegram/ui/SettingsActivity;->lambda$null$7$SettingsActivity(Lorg/telegram/ui/ActionBar/AlertDialog;)V
               Lorg/telegram/ui/SettingsActivity;->lambda$createView$3$SettingsActivity(Landroid/view/View;)V
               Lorg/telegram/ui/SettingsActivity;->lambda$createView$5$SettingsActivity(Landroid/view/View;)V
               Lorg/telegram/ui/SettingsActivity;->lambda$null$0$SettingsActivity()V
               Lorg/telegram/ui/SettingsActivity;->lambda$null$1$SettingsActivity(Lorg/telegram/tgnet/TLObject;
                    Lorg/telegram/tgnet/TLRPC$TL_error;)V
               Lorg/telegram/ui/SettingsActivity;->lambda$null$4$SettingsActivity(Landroid/content/DialogInterface; I)V
               Lorg/telegram/ui/SettingsActivity;->lambda$null$6$SettingsActivity(Landroid/content/SharedPreferences;
                    Lorg/telegram/tgnet/TLRPC$TL_help_support; Lorg/telegram/ui/ActionBar/AlertDialog;)V
               Lorg/telegram/ui/SettingsActivity;->lambda$onFragmentCreate$2$SettingsActivity(Lorg/telegram/tgnet/TLRPC$InputFile;
                    Lorg/telegram/tgnet/TLRPC$PhotoSize; Lorg/telegram/tgnet/TLRPC$PhotoSize; Lorg/telegram/tgnet/TLRPC$TL_secureFile;)V
               Lorg/telegram/ui/SettingsActivity;->lambda$performAskAQuestion$8$SettingsActivity(Landroid/content/SharedPreferences;
                    Lorg/telegram/ui/ActionBar/AlertDialog; Lorg/telegram/tgnet/TLObject; Lorg/telegram/tgnet/TLRPC$TL_error;)V
               Lorg/telegram/ui/VoIPActivity;->onAudioSettingsChanged()V
[Info]  AndroidManifest Adb Backup Checking:
           This app has disabled Adb Backup.
[Info] <Command> Runtime Command Checking:
           This app is not using critical function 'Runtime.getRuntime().exec("...")'.
[Info] <Database> SQLiteDatabase Transaction Deprecated Checking:
           Ignore checking "SQLiteDatabase:beginTransactionNonExclusive" because your set minSdk >= 11.
[Info] <Database> Android SQLite Databases Encryption (SQLite Encryption Extension (SEE)):
           This app is "NOT" using SQLite Encryption Extension (SEE) on Android (http://www.sqlite.org/android) to encrypt or decrpyt
           databases.
[Info] <Database> Android SQLite Databases Encryption (SQLCipher):
           This app is "NOT" using SQLCipher(http://sqlcipher.net/) to encrypt or decrpyt databases.
[Info] <Debug> Android Debug Mode Checking:
           DEBUG mode is OFF(android:debuggable="false") in AndroidManifest.xml.
[Info]  Dynamic Code Loading:
           No dynamic code loading(DexClassLoader) found.
[Info] <#BID 64208, CVE-2013-6271#> Fragment Vulnerability Checking:
           Did not detect the vulnerability of "Fragment" dynamically loading into "PreferenceActivity" or "SherlockPreferenceActivity"
[Info] <Framework> Framework - MonoDroid:
           This app is NOT using MonoDroid Framework (http://xamarin.com/android).
[Info] <Hacker> Base64 String Encryption:
           No encoded Base64 String or Urls found.
[Info] <Database><Hacker> Key for Android SQLite Databases Encryption:
           Did not find using the symmetric key(PRAGMA key) to encrypt the SQLite databases (It's still possible that it might use but we
           did not find out).
[Info] <KeyStore><Hacker> KeyStore File Location:
           Did not find any possible BKS keystores or certificate keystore file (Notice: It does not mean this app does not use keysotre):
[Info] <KeyStore><Hacker> KeyStore Protection Checking:
           Ignore checking KeyStore protected by password or not because you're not using KeyStore.
[Info]  HttpURLConnection Android Bug Checking:
           Ignore checking "http.keepAlive" because you're not using "HttpURLConnection" and min_Sdk > 8.
[Info] <KeyStore> KeyStore Type Checking:
           KeyStore 'BKS' type check OK
[Info]  Google Cloud Messaging Suggestion:
           Nothing to suggest.
[Info] <#CVE-2013-4787#> Master Key Type I Vulnerability:
           No Master Key Type I Vulnerability in this APK.
[Info]  App Sandbox Permission Checking:
           No security issues "MODE_WORLD_READABLE" or "MODE_WORLD_WRITEABLE" found on 'openOrCreateDatabase' or 'openOrCreateDatabase2' or
           'getDir' or 'getSharedPreferences' or 'openFileOutput'
[Info]  AndroidManifest Dangerous ProtectionLevel of Permission Checking:
           No "dangerous" protection level customized permission found (AndroidManifest.xml).
[Info]  AndroidManifest PermissionGroup Checking:
           PermissionGroup in permission tag of AndroidManifest sets correctly.
[Info]  AndroidManifest "intent-filter" Settings Checking:
           "intent-filter" of AndroidManifest.xml check OK.
[Info]  AndroidManifest Normal ProtectionLevel of Permission Checking:
           No default or "normal" protection level customized permission found (AndroidManifest.xml).
[Info] <#CVE-2013-6272#> AndroidManifest Exported Lost Prefix Checking:
           No exported components that forgot to add "android:" prefix.
[Info]  AndroidManifest ContentProvider Exported Checking:
           No exported "ContentProvider" found (AndroidManifest.xml).
[Info]  Codes for Sending SMS:
           Did not detect this app has code for sending SMS messages (sendDataMessage, sendMultipartTextMessage or sendTextMessage).
[Info] <System> AndroidManifest sharedUserId Checking:
           This app does not use "android.uid.system" sharedUserId.
[Info] <SSL_Security> SSL Implementation Checking (Verifying Host Name in Custom Classes):
           Self-defined HOSTNAME VERIFIER checking OK.
[Info] <SSL_Security> SSL Implementation Checking (Verifying Host Name in Fields):
           Critical vulnerability "ALLOW_ALL_HOSTNAME_VERIFIER" field setting or "AllowAllHostnameVerifier" class instance not found.
[Info] <SSL_Security> SSL Implementation Checking (Insecure component):
           Did not detect SSLSocketFactory by insecure method "getInsecure".
[Info] <SSL_Security> SSL Implementation Checking (HttpHost):
           DEFAULT_SCHEME_NAME for HttpHost check: OK
[Info] <SSL_Security> SSL Implementation Checking (WebViewClient for WebView):
           Did not detect critical usage of "WebViewClient"(MITM Vulnerability).
[Info] <SSL_Security> SSL Certificate Verification Checking:
           Did not find vulnerable X509Certificate code.
[Info]  Unnecessary Permission Checking:
           Permission 'android.permission.ACCESS_MOCK_LOCATION' sets correctly.
[Info]  Accessing the Internet Checking:
           This app is using the Internet via HTTP protocol.
[Info]  AndroidManifest System Use Permission Checking:
           No system-level critical use-permission found.
------------------------------------------------------------
AndroBugs analyzing time: 36.209598 secs
Total elapsed time: 164.638058 secs
